<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <PackAsTool>true</PackAsTool>
    <RollForward>Major</RollForward>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <Description>The docfx command line tool published as .NET tool</Description>
  </PropertyGroup>

  <!-- Custom target to merge docfx templates to TargetFramework independent folder.
       By default, docfx templates is packed to `tools/$(TargetFramework)/any/templates/*`.
       This target rewrite PackagePath and template files are placed at `templates/*` directory. -->
  <Target Name="RewriteDocfxTemplateFiles" AfterTargets="PackTool">
    <PropertyGroup>
      <!-- Select first element of TargetFrameworks as template source (e.g. `net6.0` is selected when TargetFrameworks `net6.0;net7.0;net8.0`) -->
      <DocfxTemplateSourceTargetFramework>$(TargetFrameworks.Split(";")[0])</DocfxTemplateSourceTargetFramework>
    </PropertyGroup>
    <!-- If TargetFramework is selected version. Rewrite template files PackagePath.-->
    <ItemGroup Condition="'$(TargetFramework)' == '$(DocfxTemplateSourceTargetFramework)'">
      <TfmSpecificPackageFile Update="@(TfmSpecificPackageFile)"
                              Condition="$([System.String]::new('%(TfmSpecificPackageFile.PackagePath)').StartsWith('tools/$(TargetFramework)/any/templates/'))"
                              PackagePath="$([System.String]::new('%(TfmSpecificPackageFile.PackagePath)').Replace('tools/$(TargetFramework)/any/',''))"/>
    </ItemGroup>
    <!-- If TargetFramework is not selected version. Remove template files from package. -->
    <ItemGroup Condition="'$(TargetFramework)' != '$(DocfxTemplateSourceTargetFramework)'">
      <TfmSpecificPackageFile Remove="@(TfmSpecificPackageFile)"
                              Condition="$([System.String]::new('%(TfmSpecificPackageFile.PackagePath)').StartsWith('tools/$(TargetFramework)/any/templates/'))"/>
    </ItemGroup>
  </Target>

  <!-- Target to add custom configProperties to `docfx.runsettings.json`. See [.NET Runtime configuration settings](https://learn.microsoft.com/en-us/dotnet/core/runtime-config) -->
  <Target Name="SetDocfxDotNetToolMode" BeforeTargets="PrepareForBuild" Condition="'$(_IsPacking)'=='true' AND '$(_IsPublishing)'!='true'">
    <ItemGroup>
      <RuntimeHostConfigurationOption Include="Docfx.DotnetToolMode" Value="true" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <InternalsVisibleTo Include="docfx.Snapshot.Tests" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Docfx.App\Docfx.App.csproj" />
    <ProjectReference Include="..\Docfx.Dotnet\Docfx.Dotnet.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Spectre.Console.Cli" />
  </ItemGroup>
</Project>
