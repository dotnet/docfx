items:
- uid: Microsoft.DocAsCode.EntityModel.TreeIterator
  id: TreeIterator
  parent: Microsoft.DocAsCode.EntityModel
  children:
  - Microsoft.DocAsCode.EntityModel.TreeIterator.PreorderAsync``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.DocAsCode.EntityModel.TreeIterator.Preorder``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Boolean})
  href: Microsoft.DocAsCode.EntityModel.TreeIterator.yml
  name: TreeIterator
  fullname: Microsoft.DocAsCode.EntityModel.TreeIterator
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.DocAsCode.EntityModel/Utility.cs
      branch: DefaultTheme
      repo: https://github.com/aspnet/docfx.git
      key: 121f5b59
    path: src/Microsoft.DocAsCode.EntityModel/Utility.cs
    startLine: 6
  assemblies:
  - Microsoft.DocAsCode.EntityModel
  namespace: Microsoft.DocAsCode.EntityModel
  syntax:
    content: public class TreeIterator
    content.vb: Public Class TreeIterator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Microsoft.DocAsCode.EntityModel.TreeIterator.PreorderAsync``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Threading.Tasks.Task{System.Boolean}})
  id: PreorderAsync``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.DocAsCode.EntityModel.TreeIterator
  href: Microsoft.DocAsCode.EntityModel.TreeIterator.yml
  name: PreorderAsync<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Task<Boolean>>)
  name.vb: PreorderAsync(Of T)(T, T, Func(Of T, IEnumerable(Of T)), Func(Of T, T, Task(Of Boolean)))
  fullname: Microsoft.DocAsCode.EntityModel.TreeIterator.PreorderAsync<T>(T, T, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Func<T, T, System.Threading.Tasks.Task<System.Boolean>>)
  fullname.vb: Microsoft.DocAsCode.EntityModel.TreeIterator.PreorderAsync(Of T)(T, T, System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Func(Of T, T, System.Threading.Tasks.Task(Of System.Boolean)))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.EntityModel/Utility.cs
    startLine: 8
  assemblies:
  - Microsoft.DocAsCode.EntityModel
  namespace: Microsoft.DocAsCode.EntityModel
  syntax:
    content: public static Task PreorderAsync<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, Task<bool>> action)
    content.vb: Public Shared Function PreorderAsync(Of T)(current As T, parent As T, childrenGetter As Func(Of T, IEnumerable(Of T)), action As Func(Of T, T, Task(Of Boolean))) As Task
    parameters:
    - id: current
      type: '{T}'
    - id: parent
      type: '{T}'
    - id: childrenGetter
      type: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
    - id: action
      type: System.Func{{T},{T},System.Threading.Tasks.Task{System.Boolean}}
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
      description: 
- uid: Microsoft.DocAsCode.EntityModel.TreeIterator.Preorder``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Boolean})
  id: Preorder``1(``0,``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,``0,System.Boolean})
  parent: Microsoft.DocAsCode.EntityModel.TreeIterator
  href: Microsoft.DocAsCode.EntityModel.TreeIterator.yml
  name: Preorder<T>(T, T, Func<T, IEnumerable<T>>, Func<T, T, Boolean>)
  name.vb: Preorder(Of T)(T, T, Func(Of T, IEnumerable(Of T)), Func(Of T, T, Boolean))
  fullname: Microsoft.DocAsCode.EntityModel.TreeIterator.Preorder<T>(T, T, System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Func<T, T, System.Boolean>)
  fullname.vb: Microsoft.DocAsCode.EntityModel.TreeIterator.Preorder(Of T)(T, T, System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Func(Of T, T, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.DocAsCode.EntityModel/Utility.cs
    startLine: 35
  assemblies:
  - Microsoft.DocAsCode.EntityModel
  namespace: Microsoft.DocAsCode.EntityModel
  syntax:
    content: public static void Preorder<T>(T current, T parent, Func<T, IEnumerable<T>> childrenGetter, Func<T, T, bool> action)
    content.vb: Public Shared Sub Preorder(Of T)(current As T, parent As T, childrenGetter As Func(Of T, IEnumerable(Of T)), action As Func(Of T, T, Boolean))
    parameters:
    - id: current
      type: '{T}'
    - id: parent
      type: '{T}'
    - id: childrenGetter
      type: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
    - id: action
      type: System.Func{{T},{T},System.Boolean}
    typeParameters:
    - id: T
references:
- uid: Microsoft.DocAsCode.EntityModel
  isExternal: false
  name: Microsoft.DocAsCode.EntityModel
  fullname: Microsoft.DocAsCode.EntityModel
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullname: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullname: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullname: System.Object.ToString
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullname: System.Object.ToString
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullname: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullname: System.Object.Equals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullname: System.Object.Equals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullname: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullname: System.Object.Equals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: ', '
    fullname: ', '
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullname: System.Object.Equals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: ', '
    fullname: ', '
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullname: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullname: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: ', '
    fullname: ', '
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullname: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullname: (
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: ', '
    fullname: ', '
  - uid: System.Object
    name: Object
    fullname: System.Object
    isExternal: true
  - name: )
    fullname: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullname: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullname: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullname: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullname: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullname: System.Object.GetType
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullname: System.Object.GetType
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullname: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullname: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullname: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullname: (
  - name: )
    fullname: )
- uid: System
  isExternal: false
  name: System
  fullname: System
- uid: '{T}'
  isExternal: false
  name: T
  fullname: T
- uid: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
  parent: System
  definition: System.Func`2
  name: Func<T, IEnumerable<T>>
  name.vb: Func(Of T, IEnumerable(Of T))
  fullname: System.Func<T, System.Collections.Generic.IEnumerable<T>>
  fullname.vb: System.Func(Of T, System.Collections.Generic.IEnumerable(Of T))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullname: System.Func
    isExternal: true
  - name: <
    fullname: <
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullname: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullname: <
  - name: T
    fullname: T
  - name: '>'
    fullname: '>'
  - name: '>'
    fullname: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullname: System.Func
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullname: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T
    fullname: T
  - name: )
    fullname: )
  - name: )
    fullname: )
- uid: System.Func{{T},{T},System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  name: Func<T, T, Task<Boolean>>
  name.vb: Func(Of T, T, Task(Of Boolean))
  fullname: System.Func<T, T, System.Threading.Tasks.Task<System.Boolean>>
  fullname.vb: System.Func(Of T, T, System.Threading.Tasks.Task(Of System.Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: <
    fullname: <
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullname: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullname: <
  - uid: System.Boolean
    name: Boolean
    fullname: System.Boolean
    isExternal: true
  - name: '>'
    fullname: '>'
  - name: '>'
    fullname: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullname: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullname: System.Boolean
    isExternal: true
  - name: )
    fullname: )
  - name: )
    fullname: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  fullname: System.Threading.Tasks.Task
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullname: System.Func<T, TResult>
  fullname.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullname: System.Func
    isExternal: true
  - name: <
    fullname: <
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: TResult
    fullname: TResult
  - name: '>'
    fullname: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullname: System.Func
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: TResult
    fullname: TResult
  - name: )
    fullname: )
- uid: System.Func`3
  parent: System
  isExternal: true
  name: Func<T1, T2, TResult>
  name.vb: Func(Of T1, T2, TResult)
  fullname: System.Func<T1, T2, TResult>
  fullname.vb: System.Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: <
    fullname: <
  - name: T1
    fullname: T1
  - name: ', '
    fullname: ', '
  - name: T2
    fullname: T2
  - name: ', '
    fullname: ', '
  - name: TResult
    fullname: TResult
  - name: '>'
    fullname: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T1
    fullname: T1
  - name: ', '
    fullname: ', '
  - name: T2
    fullname: T2
  - name: ', '
    fullname: ', '
  - name: TResult
    fullname: TResult
  - name: )
    fullname: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullname: System.Threading.Tasks
- uid: System.Func{{T},{T},System.Boolean}
  parent: System
  definition: System.Func`3
  name: Func<T, T, Boolean>
  name.vb: Func(Of T, T, Boolean)
  fullname: System.Func<T, T, System.Boolean>
  fullname.vb: System.Func(Of T, T, System.Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: <
    fullname: <
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Boolean
    name: Boolean
    fullname: System.Boolean
    isExternal: true
  - name: '>'
    fullname: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullname: System.Func
    isExternal: true
  - name: '(Of '
    fullname: '(Of '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - name: T
    fullname: T
  - name: ', '
    fullname: ', '
  - uid: System.Boolean
    name: Boolean
    fullname: System.Boolean
    isExternal: true
  - name: )
    fullname: )
