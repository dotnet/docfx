
# Content validation - indented lines within triple-colon syntax is OK for code-block-indented
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
  rules.json: |
    {
      "codeBlocks": {
        "name": "CodeBlocks",
        "description": "Validates code block content",
        "aliases": null,
        "rules": [
          {
            "type": "CodeBlockIndented",
            "message": "Indented code blocks aren't allowed. Use a Markdown code block surrounded by triple colons.",
            "code": "code-block-indented",
            "severity": "SUGGESTION",
            "exclusions": [
              "toc"
            ]
          }
        ]
      }
    }
  a.md: |
    :::image type="complex" source="image.png" alt-text="triple-colon test":::
         intented line
    :::image-end:::

         intented line2
outputs:
  a.json:
  .errors.log: |
    {"message_severity":"warning","log_item_type":"user","code":"file-not-found","message":"Invalid file link: 'image.png'.","file":"a.md","line":1,"end_line":1,"column":1,"end_column":1}
    {"message_severity":"suggestion","log_item_type":"user","code":"code-block-indented","message":"Indented code blocks aren't allowed. Use a Markdown code block surrounded by triple colons.","file":"a.md","line":5,"end_line":5,"column":1,"end_column":1}
---

# Content validation - codeblock validation indented checking
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
  rules.json: |
    {
      "codeBlocks": {
        "rules": [
          {
            "type": "CodeBlockIndented",
            "message": "Indented code blocks aren't allowed. Use a Markdown code block surrounded by triple backticks (```).",
            "code": "code-block-indented",
            "severity": "SUGGESTION",
            "exclusions": [
              "includes",
              "landingpage",
              "hubpage"
            ]
          }
        ]
      }
    }
  image.png: 
  a.md: |
    ---
    title: Axes object (Excel)
    ---

    :::image type="complex" source="image.png" alt-text="triple-colon test":::
         this is an intented codeblock included in triple colon block
    :::image-end:::
         this is an intented codeblock
outputs:
  a.json:
  image.png:
  .errors.log: |
    {"message_severity":"suggestion","log_item_type":"user","code":"code-block-indented","message":"Indented code blocks aren't allowed. Use a Markdown code block surrounded by triple backticks (```).","file":"a.md","line":8,"end_line":8,"column":1,"end_column":1}
---
# Content validation - codeblock validation unclosed
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
  rules.json: |
    {
      "codeBlocks": {
        "rules": [
          {
            "type": "CodeBlockUnclosed",
            "message": "Unclosed code block. Code blocks must begin and end with triple backticks (```).",
            "code": "code-block-unclosed",
            "severity": "SUGGESTION",
            "exclusions": [
              "includes",
              "landingpage",
              "hubpage"
            ]
          }
        ]
      }
    }
  a.md: |
    ```
      this is a closed fenced codeblock
    ```
    ```
      this is an unclosed fenced codeblock
    
         this is an intented codeblock
outputs:
  a.json:
  .errors.log: |
    {"message_severity":"suggestion","log_item_type":"user","code":"code-block-unclosed","message":"Unclosed code block. Code blocks must begin and end with triple backticks (```).","file":"a.md","line":4,"end_line":4,"column":1,"end_column":1}
---
# Content validation - codeblock language missing, set codeblock minimum line number in rule
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
  rules.json: |
    {
      "codeBlocks": {
        "rules": [
          {
            "type": "CodeLanguageMissing",
            "message": "Dev language missing. For code-blocks of {0} lines or more, we recommend that you use a cross-repo :::code::: reference with the language attribute. If this isn't feasible, you must add a valid language slug from the devlang taxonomy to your triple backtick code block.",
            "code": "dev-language-missing",
            "severity": "SUGGESTION",
            "exclusions": [
              "includes",
              "landingpage",
              "hubpage"
            ],
            "minCodeBlockLineCount": 5
          }
        ]
      }
    }
  a.md: |
    ```
      this is a fenced codeblock without language, net line number 5
      line 2
      line 3
      line 4
      line 5
    ```
    ```
      this is a fenced codeblock without language, net line number 4
      line 2
      line 3

      line 4
    ```
    ```csharp beta-1.0
      this is a fenced codeblock, net line number 5
      line 2
      line 3
      line 4
      line 5
    ```
         this is an intented codeblock
outputs:
  a.json:
  .errors.log: |
    {"message_severity":"suggestion","log_item_type":"user","code":"dev-language-missing","message":"Dev language missing. For code-blocks of 5 lines or more, we recommend that you use a cross-repo :::code::: reference with the language attribute. If this isn't feasible, you must add a valid language slug from the devlang taxonomy to your triple backtick code block.","file":"a.md","line":1,"end_line":1,"column":1,"end_column":1}
---
# Content validation - codeblock language missing, not set codeblock minimum line number in rule, so the default value is 20
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
  rules.json: |
    {
      "codeBlocks": {
        "rules": [
          {
            "type": "CodeLanguageMissing",
            "message": "Dev language missing. For code-blocks of {0} lines or more, we recommend that you use a cross-repo :::code::: reference with the language attribute. If this isn't feasible, you must add a valid language slug from the devlang taxonomy to your triple backtick code block.",
            "code": "dev-language-missing",
            "severity": "SUGGESTION",
            "exclusions": [
              "includes",
              "landingpage",
              "hubpage"
            ]
          }
        ]
      }
    }
  a.md: |
    ```
      this is a fenced codeblock without language, net line number 5
      line 2
      line 3
      line 4
      line 5
    ```
    ```
      this is a fenced codeblock without language, net line number 4
      line 2
      line 3

      line 4
    ```
    ```csharp beta-1.0
      this is a fenced codeblock, net line number 5
      line 2
      line 3
      line 4
      line 5
    ```
    ```
      this is a fenced codeblock, net line number 5
      line
      line
      line
      line 5
      line
      line
      line
      line
      line 10
      line
      line
      line
      line
      line 15
      line
      line
      line
      line
      line 20
    ```
         this is an intented codeblock
outputs:
  a.json:
  .errors.log: |
    {"message_severity":"suggestion","log_item_type":"user","code":"dev-language-missing","message":"Dev language missing. For code-blocks of 20 lines or more, we recommend that you use a cross-repo :::code::: reference with the language attribute. If this isn't feasible, you must add a valid language slug from the devlang taxonomy to your triple backtick code block.","file":"a.md","line":22,"end_line":22,"column":1,"end_column":1}
---
# Content validation - codeblock language invalid
inputs:
  docfx.yml: |
    markdownValidationRules: rules.json
    allowlists: allowlist.json
  rules.json: |
    {
      "codeBlocks": {
        "rules": [
          {
            "type": "CodeLanguageInvalid",
            "message": "Dev language '{0}' is not allowed. Specify a valid language slug from the devlang taxonomy. Language values are case-sensitive.",
            "code": "dev-language-invalid",
            "severity": "SUGGESTION",
            "exclusions": [
              "includes",
              "landingpage",
              "hubpage"
            ]
          }
        ]
      }
    }
  allowlist.json: |
    {
        "devlang": {
            "nestedValue": "",
            "nestedTaxonomy": [
                "C#",
                "csharp beta-2.0",
                "csharp"
            ]
        }
    }
  a.md: |
    ```csharp beta-1.0
      this is a fenced codeblock
    ```
    ```csharp beta-2.0
      this is a fenced codeblock
    ```
    ```c#
      this is a fenced codeblock
    ```
    ```csharp
      this is a fenced codeblock
    ```
    ```
      this is a fenced codeblock
    ```
         this is an intented codeblock
outputs:
  a.json:
  .errors.log: |
    {"message_severity":"suggestion","log_item_type":"user","code":"dev-language-invalid","message":"Dev language 'csharp beta-1.0' is not allowed. Specify a valid language slug from the devlang taxonomy. Language values are case-sensitive.","file":"a.md","line":1,"end_line":1,"column":1,"end_column":1}
    {"message_severity":"suggestion","log_item_type":"user","code":"dev-language-invalid","message":"Dev language 'c#' is not allowed. Specify a valid language slug from the devlang taxonomy. Language values are case-sensitive.","file":"a.md","line":7,"end_line":7,"column":1,"end_column":1}
---
