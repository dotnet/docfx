---
# Apply moniker range setting in the config to markdown file's output path and output content
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    hostName: docs.com
    basePath: /docs
    routes:
      docs/: .
      docs/v1/: .
      docs/v2/: .
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  docs/v2/a.md: |
    Moniker: netcore-2.0, netcore-2.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/17b9fe681514513cbf7d5c90e32f107a/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  docs/ed8f7746ec932ae7c9f595c1f2c97d5a/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0, netcore-2.1</p>",
      "monikers": ["netcore-2.0", "netcore-2.1"]
    }
  .publish.json: |
    {
      "files":[
        {"url":"/docs/a","moniker_group":"17b9fe681514513cbf7d5c90e32f107a", "config_moniker_range": "< netcore-2.0" },
        {"url":"/docs/a","moniker_group":"ed8f7746ec932ae7c9f595c1f2c97d5a", "config_moniker_range": ">= netcore-2.0" }
      ],
      "moniker_groups": {
        "ed8f7746ec932ae7c9f595c1f2c97d5a": ["netcore-2.0","netcore-2.1"],
        "17b9fe681514513cbf7d5c90e32f107a": ["netcore-1.0","netcore-1.1"]
      }
    }
---
# Multiple matched moniker range setting in the config, should use the last one
inputs:
  docfx.yml: |
    monikerRange:
      'docs/**': 'netcore-1.0'
      'docs/v1/**': 'netcore-1.1'
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
      ]
    }
outputs:
  55a4a18f941221e4d8924d8ebc96dd6c/docs/v1/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
---
# Apply moniker range setting in the config and yaml header to markdown file's output path and output content
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"],
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"],
    }
  .publish.json: |
    {
      "files": [
          { "url": "/docs/a", "path": "55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json", "moniker_group": "55a4a18f941221e4d8924d8ebc96dd6c" },
          { "url": "/docs/a", "path": "ecc061f43156f37be077db42abf8301a/docs/a.json", "moniker_group": "ecc061f43156f37be077db42abf8301a" }
      ],
      "moniker_groups":{
        "55a4a18f941221e4d8924d8ebc96dd6c":["netcore-1.1"],
        "ecc061f43156f37be077db42abf8301a":["netcore-2.0"]
      }
    }
---
# Moniker Zone syntax
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.2'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1, netcore-1.2
    ::: moniker range="<= netcore-1.1"
    Moniker: netcore-1.0, netcore-1.1
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
      ]
    }
outputs:
  4d70bd679da22f2fcabba1faf02184a4/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1, netcore-1.2</p><div data-moniker=\"netcore-1.0 netcore-1.1\"><p>Moniker: netcore-1.0, netcore-1.1</p></div>",
      "monikers": ["netcore-1.0", "netcore-1.1", "netcore-1.2"]
    }
---
# Build redirection with moniker info
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    hostName: docs.com
    basePath: /docs
    routes:
      docs/: .
      docs/v1/: .
      docs/v2/: .
    monikerDefinition: monikerDefinition.json
    fileMetadata:
      monikerRange:
        docs/v2/**/*.md: netcore-2.0
  redirections.yml: |
    redirections:
      docs/v1/c.md: /docs/a
      docs/v2/c.md: /docs/b
  docs/v1/a.md: |
  docs/v2/b.md: |
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/17b9fe681514513cbf7d5c90e32f107a/a.json:
  docs/ecc061f43156f37be077db42abf8301a/b.json:
  .publish.json: |
    {
      "files":[
        {"url":"/docs/c","moniker_group":"17b9fe681514513cbf7d5c90e32f107a"},
        {"url":"/docs/c","moniker_group":"ecc061f43156f37be077db42abf8301a"},
        {"url":"/docs/a","moniker_group":"17b9fe681514513cbf7d5c90e32f107a"},
        {"url":"/docs/b","moniker_group":"ecc061f43156f37be077db42abf8301a"}
      ],
      "moniker_groups":{
        "ecc061f43156f37be077db42abf8301a":["netcore-2.0"],
        "17b9fe681514513cbf7d5c90e32f107a":["netcore-1.0","netcore-1.1"]
      }
    }
---
# Redirection file with monikers - document id should be taken to the target file with corresponding version
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
      'docs/v2/**': 'netcore-1.1'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  redirections.yml: |
    renames:
      docs/v1/a-old.md: /docs/a
      docs/v2/a-old.md: /docs/a
      docs/b-old.md: /docs/b
  docs/v1/a.md: |
    Moniker: netcore-1.0
  docs/v2/a.md: |
    Moniker: netcore-1.1
  docs/b.md:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/a.json: |
    {
      "document_id": "2f5db941-5d87-5c7e-668b-00a1e364cc0e"
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "document_id": "08d48c30-3997-5171-bec6-5f6650078a1f"
    }
  docs/b.json: |
    {
      "document_id": "f5f11a54-50e3-b65a-bdfd-1cf00b682420"
    }
  .publish.json: |
    {
      "files": [
        { "url": "/docs/a-old", "redirect_url": "/docs/a", "moniker_group": "55a4a18f941221e4d8924d8ebc96dd6c" },
        { "url": "/docs/a-old", "redirect_url": "/docs/a", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/b-old", "redirect_url": "/docs/b" },
        { "url": "/docs/a", "moniker_group": "55a4a18f941221e4d8924d8ebc96dd6c" },
        { "url": "/docs/a", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/b" }
      ],
      "moniker_groups": {
        "55a4a18f941221e4d8924d8ebc96dd6c": ["netcore-1.1"],
        "9b52f68bce2b10c7aa018b696f8ca916": ["netcore-1.0"]
      }
    }
---
# Redirection file with monikers - document id should be taken to all the target files with corresponding version
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
      'docs/v2/**': 'netcore-2.0'
      'docs/v12/**': 'netcore-1.0 || netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
      docs/v12/: docs/
    monikerDefinition: monikerDefinition.json
  redirections.yml: |
    renames:
      docs/v12/a-old.md: /docs/a
  docs/v1/a.md: |
    Moniker: netcore-1.0
  docs/v2/a.md: |
    Moniker: netcore-2.0
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" }
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/a.json: |
    {
      "document_id": "9aad8db9-886c-62db-ad91-a80eb80f89d8"
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "document_id": "9aad8db9-886c-62db-ad91-a80eb80f89d8"
    }
  .publish.json: |
    {
      "files": [
        { "url": "/docs/a-old", "redirect_url": "/docs/a", "moniker_group": "78a0a559ed7f8a30d90c683a57012297" },
        { "url": "/docs/a", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/a", "moniker_group": "ecc061f43156f37be077db42abf8301a" }
      ],
      "moniker_groups": {
        "ecc061f43156f37be077db42abf8301a": ["netcore-2.0"],
        "9b52f68bce2b10c7aa018b696f8ca916": ["netcore-1.0"],
        "78a0a559ed7f8a30d90c683a57012297": [
            "netcore-1.0",
            "netcore-2.0"
        ]
      }
    }
---
# Redirection file with monikers - Redirection url conflict
noSingleFile: true
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
      'docs/v2/**': 'netcore-1.1'
      'docs/v12/**': 'netcore-1.0 || netcore-1.1'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
      docs/v12/: docs/
    monikerDefinition: monikerDefinition.json
  redirections.yml: |
    renames:
      docs/v1/a-old.md: /docs/a
      docs/v2/a-old.md: /docs/a
  docs/v12/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  17b9fe681514513cbf7d5c90e32f107a/docs/a.json: |
    {
      "document_id": "2f5db941-5d87-5c7e-668b-00a1e364cc0e"
    }
  .publish.json: |
    {
      "files": [
        { "url": "/docs/a-old", "redirect_url": "/docs/a", "moniker_group": "55a4a18f941221e4d8924d8ebc96dd6c" },
        { "url": "/docs/a-old", "redirect_url": "/docs/a", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/a", "moniker_group": "17b9fe681514513cbf7d5c90e32f107a" },
      ],
      "moniker_groups": {
        "9b52f68bce2b10c7aa018b696f8ca916": [ "netcore-1.0" ],
        "55a4a18f941221e4d8924d8ebc96dd6c": [ "netcore-1.1" ],
        "17b9fe681514513cbf7d5c90e32f107a": ["netcore-1.0","netcore-1.1"]
      }
    }
  .errors.log: |
    {"message_severity":"warning","code":"redirection-url-conflict","message":"The following files are redirected to '/docs/a' with redirect_document_id set to true: 'docs/v1/a-old.md', 'docs/v2/a-old.md'. Only one file can have its document ID redirected to each redirect_url. Change all but one instance to false in redirection file(s): 'redirections.yml'.","line":2,"column":21}
---
# Redirection file with monikers - moniker overlap
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.1'
      'docs/v2/**': '>= netcore-1.1 <= netcore-1.2'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  redirections.yml: |
    renames:
      docs/v1/a-old.md: /docs/a
    redirections:
      docs/v2/a-old.md: /docs/a
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  docs/v2/a.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
      ]
    }
outputs:
  17b9fe681514513cbf7d5c90e32f107a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1</p>"
    }
  98db214cbec40e19feee113edb10edb0/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.2</p>"
    }
  .publish.json: |
    {
      "files": 
      [
        {"url": "/docs/a-old", "moniker_group": "cb8e4dad4d4bcb3bdefdfe9f87ccffda", "config_moniker_range": ">= netcore-1.1 <= netcore-1.2", "redirect_url": "/docs/a"},
        {"url": "/docs/a", "path": "17b9fe681514513cbf7d5c90e32f107a/docs/a.json"},
        {"url": "/docs/a", "path": "98db214cbec40e19feee113edb10edb0/docs/a.json"},
      ]
    }
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files of the same version('netcore-1.1') publish to the same url '/docs/a-old': 'docs/v1/a-old.md [redirection]<'netcore-1.0', 'netcore-1.1'>', 'docs/v2/a-old.md [redirection]<'netcore-1.1', 'netcore-1.2'>'."}
---
# Two or more documents which don't have moniker or the moniker range is not mutually exclusive from others, publish to the same url
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1, netcore-2.0
  docs/v2/a.md: |
    Moniker: netcore-2.0, netcore-2.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  ed8f7746ec932ae7c9f595c1f2c97d5a/docs/a.json:
  .publish.json: |
    {
      "files":
      [
        {"url": "/docs/a", "path": "ed8f7746ec932ae7c9f595c1f2c97d5a/docs/a.json"}
      ]
    }
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files of the same version('netcore-2.0') publish to the same url '/docs/a': 'docs/v1/a.md<'netcore-1.0', 'netcore-1.1', 'netcore-2.0'>', 'docs/v2/a.md<'netcore-2.0', 'netcore-2.1'>'."}
---
# With moniker range not defined in config, user should not define it in file metadata
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
    fileMetadata:
      monikerRange:
        docs/b.md: '> netcore-1.0'
  docs/a.md: |
    ---
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/b.md:
  docs/TOC.yml: |
    - name: A
      href: a.md
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/a.json: |
    { "monikers": undefined }
  docs/b.json: |
    { "monikers": undefined }
  docs/toc.json:
  .errors.log: |
    {"message_severity":"suggestion","code":"moniker-range-undefined","message":"Moniker range missing in docfx.yml/docfx.json, user should not define it in file metadata or moniker zone. NOTE: This Suggestion will become a Error on 06/30/2020.","file":"docs/a.md","line":2,"column":15}
    {"message_severity":"suggestion","code":"moniker-range-undefined","message":"Moniker range missing in docfx.yml/docfx.json, user should not define it in file metadata or moniker zone. NOTE: This Suggestion will become a Error on 06/30/2020.","file":"docfx.yml","line":4,"column":16}
---
# With moniker range not defined in config, user should not define it in moniker zone
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    # Title
    ::: moniker range="netcore-1.0"
    Moniker: netcore-1.0
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/v1/a.json: |
    {
      "monikers": undefined
    }
  .errors.log: |
    {"message_severity":"suggestion","code":"moniker-range-undefined","message":"Moniker range missing in docfx.yml/docfx.json, user should not define it in file metadata or moniker zone. NOTE: This Suggestion will become a Error on 06/30/2020.","file":"docs/v1/a.md","line":2,"column":1}
---
# No intersection of config monikers and file monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: '> netcore-2.0'
    ---
    Moniker: no intersection
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '< netcore-2.0' is 'netcore-1.0', 'netcore-1.1', while file monikers is 'netcore-2.1'.","file":"docs/v1/a.md","line":2,"column":15}
---
# No intersection of file level monikers and zone monikers produces empty HTML output
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-1.1'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
    ::: moniker range="netcore-1.2"
    Moniker: netcore-1.2
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
      ]
    }
outputs:
  17b9fe681514513cbf7d5c90e32f107a/docs/a.json: |
    { "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1</p>" }
  .errors.log: |
    {"message_severity":"warning","code":"moniker-zone-empty","message":"No intersection between zone and file level monikers. The result of zone level range string 'netcore-1.2' is 'netcore-1.2', while file level monikers is 'netcore-1.0', 'netcore-1.1'.","file":"docs/v1/a.md","line":2,"column":1}
---
# Define uid with moniker range, refer to it with valid moniker in the same docset
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    Link to @a?view=netcore-1.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "conceptual": "<p>Link to <a href=\"a?view=netcore-1.1\">netcore</a></p>",
      "monikers": undefined
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
---
# Define same uid with multiple moniker ranges in .md,
# title should be the same
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/c.md: Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/c.json: |
    { "conceptual": "<p>Link to <a href=\"a\">netcore-2.0</a></p>" }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json:
  ecc061f43156f37be077db42abf8301a/docs/a.json:
---
# Define same uid with multiple moniker ranges with same name, 
# reference to it without moniker in the same docset, anyone can be taken
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "conceptual": "<p>Link to <a href=\"a\">netcore</a></p>",
      "monikers": undefined
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
---
# Define same uid with overlapping moniker range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1, netcore-2.0
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1, netcore-2.0
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0, netcore-2.1
    ---
    Moniker: netcore-2.0, netcore-2.1
  docs/c.md: Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  ed8f7746ec932ae7c9f595c1f2c97d5a/docs/a.json:
  docs/c.json: |
    {"conceptual":"<p>Link to <a href=\"a\" data-linktype=\"relative-path\">netcore-2.0, netcore-2.1</a></p>"}
  .errors.log: |
    {"message_severity":"error","code":"moniker-overlapping","message":"Two or more documents with the same uid `a`('docs/v1/a.md', 'docs/v2/a.md') have defined overlapping moniker: 'netcore-2.0'."}
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files of the same version('netcore-2.0') publish to the same url '/docs/a': 'docs/v1/a.md<'netcore-1.1', 'netcore-2.0'>', 'docs/v2/a.md<'netcore-2.0', 'netcore-2.1'>'."}
  .xrefmap.json: | 
    {"references":[{"uid":"a","name":"netcore-2.0, netcore-2.1", "monikers": ["netcore-2.0", "netcore-2.1"]}]}
  .publish.json: |
    {
      "files": 
      [
        {"url": "/docs/c"},
        {"url": "/docs/a", "path": "ed8f7746ec932ae7c9f595c1f2c97d5a/docs/a.json"}
      ]
    }
---
# Define uid with moniker range, refer to it with invalid moniker, could fall back to anyone
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    Link @a?view=netcore-1.0
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "conceptual": "<p>Link <a href=\"a?view=netcore-1.0\">netcore</a></p>",
      "monikers": undefined
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
---
# [skip] Define same uid with and without moniker range
# while refer to it without moniker range, should pick the one without moniker range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "conceptual": "<p>Link to <a href=\"a\">no version</a></p>",
      "monikers": undefined
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[{"uid":"a","href":"https://docs.com/docs/a","name":"netcore-2.0"}]}
---
# Define multiple uid without moniker range, and also uid with moniker range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    ---
    uid: a
    title: b with no version
    ---
    No version
  docs/c.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/b.json:
  docs/c.json: |
    {
      "conceptual": "<p>Link to <a href=\"b\" data-linktype=\"relative-path\">b with no version</a></p>",
      "monikers": undefined
    }
  55a4a18f941221e4d8924d8ebc96dd6c/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  ecc061f43156f37be077db42abf8301a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  .xrefmap.json: | 
    {"references":[{"uid":"a","name":"b with no version"}]}
---
# Build toc with monikers info
inputs:
  docfx.yml: |
    exclude: 'docs/v1/folder/TOC.yml'
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
    outputPdf: true
  docs/v1/a.md: |
    ---
    monikerRange: netcore-1.1 || netcore-1.0
    uid: a
    ---
    Moniker: netcore-1.0, netcore-1.1
  docs/v1/b.md: |
    ---
    monikerRange: netcore-1.2 || netcore-1.1
    ---
    Moniker: netcore-1.1, netcore-1.2
  docs/v1/TOC.md: |
    ---
    monikerRange: '>= netcore-1.1'
    ---
    # [A](a.md)
    ## [B](b.md)
    ## [Absolute](/c)
    ## [External](http://test.com/test)
    ### [A](xref:a)
    ## Text
    ### [A](a.md)
    ## [Non-versioning](../x.md)
    ### [A](a.md)
  docs/x.md:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.3", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/x.json:
  17b9fe681514513cbf7d5c90e32f107a/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  cb8e4dad4d4bcb3bdefdfe9f87ccffda/docs/b.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.1, netcore-1.2</p>",
      "monikers": ["netcore-1.1", "netcore-1.2"]
    }
  4186d6505439642fa6301b4755580de2/docs/toc.json: |
    {
      "items": [
        {
          "name": "A",
          "href": "a",
          "monikers": undefined,
          "items": [
            { "name": "B", "href": "b", "monikers": ["netcore-1.1", "netcore-1.2"] },
            { "name": "Absolute", "href": "/c", "monikers": undefined },
            {
              "name": "External",
              "href": "http://test.com/test",
              "monikers": undefined,
              "items": [
                { "name": "A", "href": "a", "monikers": ["netcore-1.0", "netcore-1.1"] }
              ]
            },
            {
              "name": "Text",
              "monikers": [ "netcore-1.0", "netcore-1.1" ],
              "items": [
                { "name": "A", "href": "a", "monikers": undefined}
              ]
            },
            { 
              "name": "Non-versioning",
              "href": "x",
              "monikers": undefined,
              "items": [
                { "name": "A", "href": "a", "monikers": ["netcore-1.0", "netcore-1.1"] }
              ]
            },
          ]
        }
      ],
      "metadata": {
        "pdf_absolute_path": "/opbuildpdf/4186d6505439642fa6301b4755580de2/docs/toc.pdf"
      }
    }
---
# Build toc with monikers info - multiple node with same url
usePhysicalInput: true
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
      'docs/v2/**': 'netcore-2.0'
      'docs/v1-v2/**': 'netcore-1.0 || netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
      docs/v1-v2/: docs/
    monikerDefinition: '{APP_BASE_PATH}/data/monikers.json'
  docs/v1/a.md: |
    Moniker: netcore-1.0
  docs/v2/a.md: |
    Moniker: netcore-2.0
  docs/v1-v2/TOC.md: |
    # [A-1](../v1/a.md)
    # [A-2](../v2/a.md)
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/a.json:
  ecc061f43156f37be077db42abf8301a/docs/a.json:
  78a0a559ed7f8a30d90c683a57012297/docs/toc.json: |
    {
      "items": [
        { "name": "A-1", "href": "a", "monikers": ["netcore-1.0"] },
        { "name": "A-2", "href": "a", "monikers": ["netcore-2.0"] }
      ]
    }
---
# Build included toc with moniker info
usePhysicalInput: true
inputs:
  docfx.yml: |
    exclude: 'docs/v1/folder/TOC.yml'
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.3'
    routes:
      docs/v1/: docs/
    monikerDefinition: '{APP_BASE_PATH}/data/monikers.json'
  docs/v1/b.md: |
    ---
    monikerRange: netcore-1.0
    ---
    Moniker: netcore-1.0
  docs/v1/c.md: |
    ---
    monikerRange: netcore-1.1
    ---
    Moniker: netcore-1.1
  docs/v1/d.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
  docs/v1/e.md: |
    ---
    monikerRange: netcore-1.3
    ---
    Moniker: netcore-1.3
  docs/v1/TOC.yml: |
    metadata:
      monikerRange: '>= netcore-1.1'
    items:
      - name: Toc ref
        href: folder/TOC.yml
        items:
          - name: D
            href: d.md
      - name: Toc ref with topicHref
        href: folder/TOC.yml
        topicHref: e.md
        items:
          - name: D
            href: d.md
      - name: Toc ref with external link topicHref
        href: folder/TOC.yml
        topicHref: https://hostname/test
        items:
          - name: D
            href: d.md
  docs/v1/folder/TOC.yml: |
    metadata:
      monikerRange: '<= netcore-1.1'
    items:
      - name: B
        href: ../b.md
      - name: C
        href: ../c.md
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/b.json:
  55a4a18f941221e4d8924d8ebc96dd6c/docs/c.json:
  98db214cbec40e19feee113edb10edb0/docs/d.json:
  67b6a3a371dd7a835afa0157c240fc18/docs/e.json:
  4186d6505439642fa6301b4755580de2/docs/toc.json: |
    {
      "items": [
        {
          "name": "Toc ref",
          "monikers": [ "netcore-1.0", "netcore-1.1" ],
          "items": [
            { "name": "B", "href": "b", "monikers": ["netcore-1.0"] },
            { "name": "C", "href": "c", "monikers": ["netcore-1.1"] }
          ]
        },
        {
          "name": "Toc ref with topicHref",
          "href": "e",
          "monikers": [ "netcore-1.0", "netcore-1.1", "netcore-1.3" ],
          "items": [
            { "name": "B", "href": "b", "monikers": ["netcore-1.0"] },
            { "name": "C", "href": "c", "monikers": ["netcore-1.1"] }
          ]
        },
        {
          "name": "Toc ref with external link topicHref",
          "href": "https://hostname/test",
          "monikers": undefined,
          "items": [
            { "name": "B", "href": "b", "monikers": ["netcore-1.0"] },
            { "name": "C", "href": "c", "monikers": ["netcore-1.1"] }
          ]
        }
      ]
    }
---
# Build folder reference toc with moniker info
usePhysicalInput: true
inputs:
  docfx.yml: |
    exclude: 'docs/v1/folder/TOC.yml'
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.3'
    routes:
      docs/v1/: docs/
    monikerDefinition: '{APP_BASE_PATH}/data/monikers.json'
  docs/v1/b.md: |
    ---
    monikerRange: netcore-1.0
    ---
    Moniker: netcore-1.0
  docs/v1/c.md: |
    ---
    monikerRange: netcore-1.1
    ---
    Moniker: netcore-1.1
  docs/v1/d.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
  docs/v1/e.md: |
    ---
    monikerRange: netcore-1.3
    ---
    Moniker: netcore-1.3
  docs/v1/TOC.yml: |
    metadata:
      monikerRange: '>= netcore-1.1'
    items:
      - name: Folder ref
        href: folder/
        items:
          - name: D
            href: d.md
      - name: Folder ref with topicHref
        href: folder/
        topicHref: e.md
        items:
          - name: D
            href: d.md
      - name: Folder ref with external link topicHref
        href: folder/
        topicHref: https://hostname/test
        items:
          - name: D
            href: d.md
  docs/v1/folder/TOC.yml: |
    metadata:
      monikerRange: '<= netcore-1.1'
    items:
      - name: B
        href: ../b.md
      - name: C
        href: ../c.md
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/b.json:
  55a4a18f941221e4d8924d8ebc96dd6c/docs/c.json:
  98db214cbec40e19feee113edb10edb0/docs/d.json:
  67b6a3a371dd7a835afa0157c240fc18/docs/e.json:
  4186d6505439642fa6301b4755580de2/docs/toc.json: |
    {
      "items": [
        {
          "name": "Folder ref",
          "href": "b",
          "monikers": [ "netcore-1.0", "netcore-1.2" ],
          "items": [
            { "name": "D", "href": "d", "monikers": ["netcore-1.2"] }
          ]
        },
        {
          "name": "Folder ref with topicHref",
          "href": "e",
          "monikers": [ "netcore-1.2", "netcore-1.3" ],
          "items": [
            { "name": "D", "href": "d", "monikers": ["netcore-1.2"] }
          ]
        },
        {
          "name": "Folder ref with external link topicHref",
          "href": "https://hostname/test",
          "monikers": undefined,
          "items": [
            { "name": "D", "href": "d", "monikers": ["netcore-1.2"] }
          ]
        }
      ]
    }
---
# Build toc with duplicate monikers
noSingleFile: true
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    # Node
  docs/v2/TOC.md: |
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  ecc061f43156f37be077db42abf8301a/docs/toc.json:
  .publish.json: |
    {
      "files":
      [
        {
          "url": "/docs/toc.json",
          "locale": "en-us",
          "path": "ecc061f43156f37be077db42abf8301a/docs/toc.json",
        }
      ]
    }
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files of the same version('netcore-2.0') publish to the same url '/docs/toc.json': 'docs/v1/TOC.md<'netcore-1.0', 'netcore-2.0'>', 'docs/v2/TOC.md<'netcore-2.0'>'."}
---
# No intersection of config monikers and file monikers of TOC file
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikerRange: netcore-1.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-2.0' is 'netcore-2.0', while file monikers is 'netcore-1.0'.","file":"docs/v1/TOC.md","line":2,"column":15}
---
# Build resource file with moniker
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
      'docs/v2/**': 'netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0
    ![image](c.png)
  docs/v2/a.md: |
    Moniker: netcore-2.0
    ![image](c.png)
  docs/v1/c.png:
  docs/v2/c.png:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/a.json:
  9b52f68bce2b10c7aa018b696f8ca916/docs/c.png:
  ecc061f43156f37be077db42abf8301a/docs/a.json:
  ecc061f43156f37be077db42abf8301a/docs/c.png:
  .publish.json: |
    {
      "files": [
        { "url": "/docs/a", "path": "9b52f68bce2b10c7aa018b696f8ca916/docs/a.json", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/c.png", "path": "9b52f68bce2b10c7aa018b696f8ca916/docs/c.png", "moniker_group": "9b52f68bce2b10c7aa018b696f8ca916" },
        { "url": "/docs/a", "path": "ecc061f43156f37be077db42abf8301a/docs/a.json", "moniker_group": "ecc061f43156f37be077db42abf8301a" },
        { "url": "/docs/c.png", "path": "ecc061f43156f37be077db42abf8301a/docs/c.png", "moniker_group": "ecc061f43156f37be077db42abf8301a" },
      ],
      "moniker_groups": {
        "9b52f68bce2b10c7aa018b696f8ca916": ["netcore-1.0"],
        "ecc061f43156f37be077db42abf8301a": ["netcore-2.0"]
      }
    }
---
# Build resource file with moniker conflict
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-1.1'
      'docs/v2/**': '>= netcore-1.1'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
    ![image](c.png)
  docs/v2/a.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
    ![image](c.png)
  docs/v1/c.png:
  docs/v2/c.png:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" }
      ]
    }
outputs:
  cb8e4dad4d4bcb3bdefdfe9f87ccffda/docs/c.png:
  17b9fe681514513cbf7d5c90e32f107a/docs/a.json:
  98db214cbec40e19feee113edb10edb0/docs/a.json:
  .publish.json: |
    {
      "files": [
          { "url": "/docs/a" },
          { "url": "/docs/a" },
          { "url": "/docs/c.png", "path": "cb8e4dad4d4bcb3bdefdfe9f87ccffda/docs/c.png"},
      ]
    }
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files of the same version('netcore-1.1') publish to the same url '/docs/c.png': 'docs/v1/c.png<'netcore-1.0', 'netcore-1.1'>', 'docs/v2/c.png<'netcore-1.1', 'netcore-1.2'>'."}
---
# Invalid moniker definition
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
  a.md:
  monikerDefinition.json: |
    { "monikers": [
outputs:
  .errors.log: |
    {"message_severity":"error","code":"json-syntax-error","message":"Unexpected end when deserializing array.","file":"monikerDefinition.json","line":2}
---
# Invalid moniker range in config
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md:
  monikerDefinition.json: |
    {}
outputs:
  docs/v1/a.json:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-invalid","message":"Invalid moniker range: '>= netcore-2.0'. Moniker 'netcore-2.0' is not defined.","file":"docfx.yml","line":2,"column":17}
---
# Invalid moniker range in file
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: netcore-1.2
    ---
  docs/v1/b.md: |
    # Invalid Moniker range
    ::: moniker range="<= netcore-1.2"
    Invalid moniker Zone
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" }
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-invalid","message":"Invalid moniker range: 'netcore-1.2'. Moniker 'netcore-1.2' is not defined.","file":"docs/v1/a.md","line":2,"column":15}
    {"message_severity":"error","code":"moniker-range-invalid","message":"Invalid moniker range: '<= netcore-1.2'. Moniker 'netcore-1.2' is not defined.","file":"docs/v1/b.md","line":2,"column":1}
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-1.0' is 'netcore-1.0', while file monikers is ''.","file":"docs/v1/a.md","line":2,"column":15}
    {"message_severity":"warning","code":"moniker-zone-empty","message":"No intersection between zone and file level monikers. The result of zone level range string '<= netcore-1.2' is '', while file level monikers is 'netcore-1.0'.","file":"docs/v1/b.md","line":2,"column":1}
---
# Resolving moniker zone in token should base on root file's moniker
inputs:
  docfx.yml: |
    exclude: "**/includes/**"
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    hostName: docs.com
    basePath: /docs
    routes:
      docs/: .
      docs/v1/: .
      docs/v2/: .
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    [!INCLUDE [Include](../includes/token.md)]
  docs/v2/a.md: |
    [!INCLUDE [Include](../includes/token.md)]
  docs/includes/token.md: |
    Moniker: Same with parent
    ::: moniker range=">= netcore-1.1"
    Moniker: >= netcore-1.1
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.1", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/17b9fe681514513cbf7d5c90e32f107a/a.json: |
    {
      "conceptual": "<p>Moniker: Same with parent</p><div data-moniker=\"netcore-1.1\"><p>Moniker: &gt;= netcore-1.1</p></div>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  docs/ed8f7746ec932ae7c9f595c1f2c97d5a/a.json: |
    {
      "conceptual": "<p>Moniker: Same with parent</p><div data-moniker=\"netcore-2.0 netcore-2.1\"><p>Moniker: &gt;= netcore-1.1</p></div>",
      "monikers": ["netcore-2.0", "netcore-2.1"]
    }
  .publish.json: |
    {
      "files":[
        {"url":"/docs/a","moniker_group":"17b9fe681514513cbf7d5c90e32f107a"},
        {"url":"/docs/a","moniker_group":"ed8f7746ec932ae7c9f595c1f2c97d5a"}
      ],
      "moniker_groups":{
        "ed8f7746ec932ae7c9f595c1f2c97d5a":["netcore-2.0","netcore-2.1"],
        "17b9fe681514513cbf7d5c90e32f107a":["netcore-1.0","netcore-1.1"]
      }
    }
---
# Report a error when there are multiple files publish to same url, some with version, some without
noSingleFile: true
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': 'netcore-1.0'
    hostName: docs.com
    basePath: /docs
    routes:
      docs/: .
      docs/v1/: .
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ![image](b.png)
  docs/v1/TOC.md:
    # [A](a.md)
  docs/v1/b.png:
  docs/a.md: |
    ![image](b.png)
  docs/TOC.md:
    # [A](a.md)
  docs/b.png:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" }
      ]
    }
outputs:
  docs/a.json:
  docs/b.png:
  docs/toc.json:
  .publish.json: |
    {
      "files":[
        {"url":"/docs/a","moniker_group":undefined},
        {"url":"/docs/b.png","moniker_group":undefined},
        {"url":"/docs/toc.json","moniker_group":undefined}
      ]
    }
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files publish to the same url '/docs/b.png': 'docs/b.png', 'docs/v1/b.png'."}
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files publish to the same url '/docs/a': 'docs/a.md', 'docs/v1/a.md'."}
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files publish to the same url '/docs/toc.json': 'docs/TOC.md', 'docs/v1/TOC.md'."}
---
# monikers output should be stable
inputs:
  docfx.yml: |
    exclude: "**/includes/**"
    monikerRange:
      'docs/v1/**': 'versioning-2.0 || versioning-1.0'
    hostName: docs.com
    basePath: /docs
    routes:
      docs/v1/: .
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: 
  docs/v1/TOC.md: |
    # [A](a.md)
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "versioning-2.0", "product_name": "Product_A" },
        { "moniker_name": "versioning-1.0", "product_name": "Product_A" }
      ]
    }
outputs:
  docs/c7654dfba8a02b8991beeae19b3f816b/a.json:
  docs/c7654dfba8a02b8991beeae19b3f816b/toc.json:
  .publish.json: |
    {
      "files":[
        {"url":"/docs/a","moniker_group":"c7654dfba8a02b8991beeae19b3f816b"},
        {"url":"/docs/toc.json","moniker_group":"c7654dfba8a02b8991beeae19b3f816b"}
      ],
      "moniker_groups":{
        "c7654dfba8a02b8991beeae19b3f816b":["versioning-1.0","versioning-2.0"]
      }
    }
---
# Read moniker range from content src/dest and group settings
inputs:
  docfx.yml: |
    content:
    - src: v1
      dest: .
      group: g1
    - src: v2
      dest: .
      group: g2
    groups:
      g1:
        moniker_range: netcore-1.0
      g2:
        moniker_range: netcore-2.0
    monikerDefinition: monikerDefinition.json
  v1/a.md:
  v2/a.md:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/a.json: |
    { "monikers": ["netcore-1.0"] }
  ecc061f43156f37be077db42abf8301a/a.json: |
    { "monikers": ["netcore-2.0"] }
---
# Allow monikers Config if monikerRange not defined
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/q.md: |
    ---
    monikers: netcore-2.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  ecc061f43156f37be077db42abf8301a/docs/q.json: |
    {"monikers":["netcore-2.0"]}
---
# User defined monikers should not outrange moniker range in config
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikers: netcore-1.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-2.0' is 'netcore-2.0', while file monikers is 'netcore-1.0'.","file":"docs/v1/TOC.md","line":2,"column":11}
---
# Warn on moniker config duplication
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikers: NETCore-1.0
    monikerRange: netcore-1.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-2.0' is 'netcore-2.0', while file monikers is 'netcore-1.0'.","file":"docs/v1/TOC.md","line":3,"column":15}
    {"message_severity":"warning","code":"duplicate-moniker-config","message":"Both 'monikers' and 'monikerRange' are defined, 'monikers' is ignored.","file":"docs/v1/TOC.md","line":2,"column":11}
---
# Throw on monikers value invalid
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikers: netcore-1.1
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-invalid","message":"Invalid moniker range: Moniker 'netcore-1.1' is not defined.","file":"docs/v1/TOC.md","line":2,"column":11}
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-2.0' is 'netcore-2.0', while file monikers is ''.","file":"docs/v1/TOC.md","line":2,"column":11}
---
# Should take monikerRange as final monikers even it outputs empty
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikers: netcore-1.0
    monikerRange: '>netcore-1.0 <netcore-1.0'
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"warning","code":"duplicate-moniker-config","message":"Both 'monikers' and 'monikerRange' are defined, 'monikers' is ignored.","file":"docs/v1/TOC.md","line":2,"column":11}
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '>= netcore-1.0' is 'netcore-1.0', 'netcore-2.0', while file monikers is ''.","file":"docs/v1/TOC.md","line":3,"column":15}
---
# Should take monikers as final monikers if user inputs empty string for monikerRange
# and no duplicate-moniker-config warning
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikers: netcore-1.0
    monikerRange:
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/a.json: |
    {"monikers":["netcore-1.0"]}
---
# Should warn if user input monikers with array of empty items
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/TOC.md: |
    ---
    monikers:
      -
    monikerRange: < netcore-2.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/docs/toc.json: |
    {"metadata":{}}
  .errors.log: |
    {"message_severity":"warning","code":"null-array-value","message":"'monikers' contains null value, the null value has been removed.","file":"docs/v1/TOC.md","line":3,"column":4}
    {"message_severity":"warning","code":"duplicate-moniker-config","message":"Both 'monikers' and 'monikerRange' are defined, 'monikers' is ignored."}
---
# Skip moniker validation for .yml files
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
  docs/a.yml: |
    ### YamlMime:TestData
    metadata:
      monikers: 
      - NETcore-2.0
      - netcore-1.0
  docs/b.md: |
    ---
    monikers: netcore-1.0
    ---
  _themes/ContentTemplate/schemas/TestData.schema.json: |
    {
      "properties": {
        "metadata": {
          "properties": {
            "monikers": { "type": "array" }
          }
        }
      }
    }  
  _themes/ContentTemplate/TestData.html.primary.tmpl:
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  78a0a559ed7f8a30d90c683a57012297/docs/a.json: |
    {"metadata":{"monikers":["netcore-1.0","netcore-2.0"]}}
  .errors.log: |
    {"message_severity":"error","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '' is '', while file monikers is 'netcore-1.0'.","file":"docs/b.md","line":2,"column":11}
---
# Group config is ignored with groups missing in docfx.json of v2
noSingleFile: true
inputs:
  docfx.json: |
    {
      "build": 
      {
        "content": [
          {
            "group": "group-1",
            "files": "**.md",
            "src": "docs/v1"
          },
          {
            "group": "group-2",
            "file": "**.md",
            "src": "docs/v2"
          }
        ],
        "dest": "docs",
        "monikerDefinition": "monikerDefinition.json"
      }
    }
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
  docs/v1/a.md: |
    moniker: netcore-1.0
  docs/v2/a.md: |
    moniker: netcore-2.0
outputs:
  .errors.log: |
    {"message_severity":"warning","code":"output-path-conflict","message":"Two or more files output to the same path 'a.json': 'docs/v1/a.md', 'docs/v2/a.md'."}
  a.json: |
    {"conceptual":"<p>moniker: netcore-2.0</p>"}
---
# Compatible for version in docfx.json of v2
inputs:
  docfx.json: |
    {
      "build": 
      {
        "content": [
          {
            "version": "netcore-1.0",
            "files": "**.md",
            "src": "docs/v1"
          },
          {
            "version": "netcore-2.0",
            "file": "**.md",
            "src": "docs/v2"
          }
        ],
        "dest": "docs",
        "monikerDefinition": "monikerDefinition.json",
      }
    }
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
  docs/v1/a.md:
  docs/v2/a.md:
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/a.json: |
    {"monikers":["netcore-1.0"]}
  ecc061f43156f37be077db42abf8301a/a.json: |
    {"monikers":["netcore-2.0"]}
---
# Group is ignored when version configured in docfx.json of v2
inputs:
  docfx.json: |
    {
      "build": 
      {
        "content": [
          {
            "version": "netcore-1.0",
            "group": "",
            "files": "**.md",
            "src": "docs/v1"
          },
          {
            "version": "netcore-2.0",
            "file": "**.md",
            "src": "docs/v2"
          }
        ],
        "dest": "docs",
        "monikerDefinition": "monikerDefinition.json",
      }
    }
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
  docs/v1/a.md:
  docs/v2/a.md:
outputs:
  9b52f68bce2b10c7aa018b696f8ca916/a.json: |
    {"monikers":["netcore-1.0"]}
  ecc061f43156f37be077db42abf8301a/a.json: |
    {"monikers":["netcore-2.0"]}
---
# Support exclude_monikers metadata
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/q.md: |
    ---
    exclude_monikers: netcore-2.0
    monikerRange: '< netcore-4.0'
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-3.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-4.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  dbd65aae1151fa58b34e889be64c7783/docs/q.json: |
    {"monikers":["netcore-3.0"]}
---
# Error on file monikers does not intersect with config monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '> netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/q.md: |
    ---
    exclude_monikers: netcore-3.0
    monikerRange: 'netcore-3.0'
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-3.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-4.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","log_item_type":"user","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '> netcore-2.0' is 'netcore-3.0', 'netcore-4.0', while file monikers is ''.","file":"docs/v1/q.md","line":3,"column":15}
---
# Support replace_monikers metadata
# when it is set, the other moniker related metadatas are ignored
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/q.md: |
    ---
    replace_monikers: netcore-4.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-3.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-4.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  120d8563fdad4bed21620baf3019b9a7/docs/q.json: |
    {"monikers":["netcore-4.0"]}
---
# replace_monikers should intersect with the config monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/q.md: |
    ---
    replace_monikers: netcore-3.0
    ---
    # Node
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-3.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  .errors.log: |
    {"message_severity":"error","log_item_type":"user","code":"moniker-range-out-of-scope","message":"No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '<= netcore-2.0' is 'netcore-1.0', 'netcore-2.0', while file monikers is 'netcore-3.0'.","file":"docs/v1/q.md","line":2,"column":19}
---
# Should not take exclue_monikers into consideration while warn on moniker-zone-empty
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.2'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    exclude_monikers: netcore-1.0
    ---
    Moniker: netcore-1.0, netcore-1.1, netcore-1.2
    ::: moniker range="< netcore-1.1"
    Moniker: netcore-1.0
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
      ]
    }
outputs:
  cb8e4dad4d4bcb3bdefdfe9f87ccffda/docs/a.json: |
    {
      "conceptual": "<p>Moniker: netcore-1.0, netcore-1.1, netcore-1.2</p>",
      "monikers": ["netcore-1.1", "netcore-1.2"]
    }
---
# Respect all monikers file metadata for redirections and resources
inputs:
  docfx.yml: |
    monikerRange:
      'v2/**': v2
    fileMetadata:
      monikers:
        'v1/**': v1
    monikerDefinition: monikerDefinition.json
  v1/a.png:
  redirections.yml: |
    redirections:
      v2/b.md: /url
  monikerDefinition.json: |
    {
      "monikers": [{ "moniker_name": "v1" }, { "moniker_name": "v2" }]
    }
outputs:
  3bfc269594ef649228e9a74bab00f042/v1/a.png:
  .publish.json: |
    {
      "files": [
        { "url": "/v2/b", "moniker_group": "fb04dcb6970e4c3d1873de51fd5a50d7" },
        { "url": "/v1/a.png", "moniker_group": "3bfc269594ef649228e9a74bab00f042" }
      ]
    }
---
# Only validate monikers for user input markdown
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
    fileMetadata:
      exclude_monikers:
        '**/*.md': [netcore-1.0]
      monikerRange:
        'docs/**': 'netcore-1.0'
  redirections.yml: |
    redirections:
      docs/a.md: /b
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.2", "product_name": ".NET Core" },
      ]
    }
outputs:
---
# Token inclusion with replace_monikers
inputs:
  docfx.yml: |
    content:
    - src: v1
      exclude: '**/includes/**'
      dest: .
      group: g1
    groups:
      g1:
        moniker_range: netcore-1.0
    monikerDefinition: monikerDefinition.json
  v1/a.md: |
    [!include[B1](includes/token.md)]
  v1/includes/token.md: |
      ---
      replace_monikers: netcore-2.0
      ---
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs: 
  9b52f68bce2b10c7aa018b696f8ca916/a.json:
