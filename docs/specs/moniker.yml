---
# Apply moniker range setting in the config to markdown file's output path and output content
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  docs/v2/a.md: |
    Moniker: netcore-2.0, netcore-2.1
  docs/a.md: |
    No version
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  9d4e15fd/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  23d205a5/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0, netcore-2.1</p>",
      "monikers": ["netcore-2.0", "netcore-2.1"]
    }
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
---
# Apply moniker range setting in the config and yaml header to markdown file's output path and output content
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/a.md: |
    No version
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  build.manifest: |
    {
      "files": [
          {
              "siteUrl": "/docs/a",
              "outputPath": "docs/a.json",
              "sourcePath": "docs/a.md",
              "monikers": []
          },
          {
              "siteUrl": "/docs/a",
              "outputPath": "218c13d0/docs/a.json",
              "sourcePath": "docs/v1/a.md",
              "monikers": [
                  "netcore-1.1"
              ]
          },
          {
              "siteUrl": "/docs/a",
              "outputPath": "4667fedf/docs/a.json",
              "sourcePath": "docs/v2/a.md",
              "monikers": [
                  "netcore-2.0"
              ]
          }
      ],
      "dependencies": {}
    }
---
# Moniker Zone syntax
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.2'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1, netcore-1.2
    ::: moniker range="<= netcore-1.1"
    Moniker: netcore-1.0, netcore-1.1
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" },
      ]
    }
outputs:
  2420f88b/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.0, netcore-1.1, netcore-1.2</p><div data-moniker=\"netcore-1.0 netcore-1.1\"><p>Moniker: netcore-1.0, netcore-1.1</p></div>",
      "monikers": ["netcore-1.0", "netcore-1.1", "netcore-1.2"]
    }
---
# Redirection file with monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.1'
      'docs/v2/**': '> netcore-1.1 <= netcore-1.3'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
    redirections:
      docs/v1/a-old.md: /docs/a
    redirectionsWithoutId:
      docs/v2/a-old.md: /docs/a
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  docs/v2/a.md: |
    Moniker: netcore-1.2, netcore-1.3
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" },
        { "name": "netcore-1.3", "product": ".NET Core" },
      ]
    }
outputs:
  9d4e15fd/docs/a.json: |
    {
      "document_id": "2f5db941-5d87-5c7e-668b-00a1e364cc0e",
      "content": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  9d4e15fd/docs/a-old.json: |
    {
      "redirect_url": "/docs/a",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  f961cd88/docs/a.json: |
    {
      "document_id": "2f5db941-5d87-5c7e-668b-00a1e364cc0e",
      "content": "<p>Moniker: netcore-1.2, netcore-1.3</p>",
      "monikers": ["netcore-1.2", "netcore-1.3"]
    }
  f961cd88/docs/a-old.json: |
    {
      "redirect_url": "/docs/a",
      "monikers": ["netcore-1.2", "netcore-1.3"]
    }
---
# Redirection file with monikers range overlap
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 <= netcore-1.1'
      'docs/v2/**': '>= netcore-1.1 <= netcore-1.2'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
    redirections:
      docs/v1/a-old.md: /docs/a
    redirectionsWithoutId:
      docs/v2/a-old.md: /docs/a
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
  docs/v2/a.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" },
      ]
    }
outputs:
  9d4e15fd/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  b201e604/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.2</p>",
      "monikers": ["netcore-1.2"]
    }
  build.log: |
    ["error","publish-url-conflict","Two or more files of the same version('netcore-1.1') publish to the same url '/docs/a-old': 'docs/v1/a-old.md <redirection>', 'docs/v2/a-old.md <redirection>'"]
---
# Two or more documents which don't have moniker or the moniker range is not mutually exclusive from others, publish to the same url
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1, netcore-2.0
  docs/v2/a.md: |
    Moniker: netcore-2.0, netcore-2.1
  docs/a.md: |
    No version
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  build.log: |
    ["error","publish-url-conflict","Two or more files of the same version('netcore-2.0') publish to the same url '/docs/a': 'docs/a.md', 'docs/v1/a.md', 'docs/v2/a.md'"]
---
# With moniker range not defined in config, user should not define it in file metadata
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/v1/a.json:
  build.log: |
    ["warning","moniker-config-missing","Moniker range missing in docfx.yml/docfx.json, user should not define it in file metadata or moniker zone.","docs/v1/a.md"]
---
# With moniker range not defined in config, user should not define it in moniker zone
inputs:
  docfx.yml: |
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ::: moniker range="netcore-1.0"
    Moniker: netcore-1.0
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" }
      ]
    }
outputs:
  docs/v1/a.json:
  build.log: |
    ["warning","moniker-config-missing","Moniker range missing in docfx.yml/docfx.json, user should not define it in file metadata or moniker zone.","docs/v1/a.md"]
---
# No intersection of config monikers and file monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: '> netcore-2.0'
    ---
    Moniker: no intersection
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/a.json:
  build.log: |
    ["warning","empty-monikers","No moniker intersection between docfx.yml/docfx.json and file metadata. Config moniker range '< netcore-2.0' is 'netcore-1.0,netcore-1.1', while file moniker range '> netcore-2.0' is 'netcore-2.1'","docs/v1/a.md"]
---
# No intersection of file level monikers and zone monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-1.1'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
    ::: moniker range="netcore-1.2"
    Moniker: netcore-1.2
    ::: moniker-end
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" },
      ]
    }
outputs:
  9d4e15fd/docs/a.json:
  build.log: |
    ["warning","empty-monikers","No intersection between zone and file level monikers. The result of zone level range string 'netcore-1.2' is 'netcore-1.2', while file level monikers is 'netcore-1.0,netcore-1.1'.","docs/v1/a.md"]
---
# Define uid with moniker range, refer to it with valid moniker in the same docset
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/a.md: |
    No version
  docs/b.md: |
    Link to @a?view=netcore-1.1
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "content": "<p>Link to <a href=\"/docs/a?view=netcore-1.1\">netcore-1.1</a></p>",
      "monikers": []
    }
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[{"uid":"a","href":"/docs/a","name":"netcore-2.0"}]}
---
# Define same uid with multiple moniker ranges, 
# reference to it without moniker in the same docset, shoule take the latest one
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/a.md: |
    No version
  docs/b.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "content": "<p>Link to <a href=\"/docs/a\">netcore-2.0</a></p>",
      "monikers": []
    }
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[{"uid":"a","href":"/docs/a","name":"netcore-2.0"}]}
---
# Define same uid with overlapping moniker range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1, netcore-2.0
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1, netcore-2.0
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0, netcore-2.1
    ---
    Moniker: netcore-2.0, netcore-2.1
  docs/c.md: Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/c.json: |
    {"content":"<p>Link to @a</p>"}
  build.log: |
    ["error","moniker-overlapping","Two or more documents have defined overlapping moniker: 'netcore-2.0'"]
    ["info","at-uid-not-found","Cannot find uid 'a' using xref '@a'","docs/c.md"]
    ["error","publish-url-conflict","Two or more files of the same version('netcore-2.0') publish to the same url '/docs/a': 'docs/v1/a.md', 'docs/v2/a.md'"]
  xrefmap.json: | 
    {"references":[]}
---
# Define uid with moniker range, refer to it with invalid moniker, should fall back to the one with latest moniker
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/b.md: |
    Link to @a?view=netcore-1.0
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "content": "<p>Link to <a href=\"/docs/a?view=netcore-1.0\">netcore-2.0</a></p>",
      "monikers": [] 
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[{"uid":"a","href":"/docs/a","name":"netcore-2.0"}]}
  build.log: |
    ["warning","invalid-uid-moniker","Moniker 'netcore-1.0' is not defined with uid 'a'"]
---
# Define same uid with and without moniker range
# while refer to it without moniker range, should pick the one without monike range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/a.md: |
    ---
    uid: a
    title: no version
    ---
    No version
  docs/b.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/b.json: |
    {
      "content": "<p>Link to <a href=\"/docs/a\">no version</a></p>",
      "monikers": []
    }
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[{"uid":"a","href":"/docs/a","name":"netcore-2.0"}]}
---
# Define multiple uid without moniker range, and also uid with moniker range
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    uid: a
    title: netcore-1.1
    monikerRange: '> netcore-1.0'
    ---
    Moniker: netcore-1.1
  docs/v2/a.md: |
    ---
    uid: a
    title: netcore-2.0
    monikerRange: '<= netcore-2.0'
    ---
    Moniker: netcore-2.0
  docs/a.md: |
    ---
    uid: a
    title: no version
    ---
    No version
  docs/b.md: |
    ---
    uid: a
    title: b with no version
    ---
    No version
  docs/c.md: |
    Link to @a
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
        { "name": "netcore-2.1", "product": ".NET Core" }
      ]
    }
outputs:
  docs/b.json:
  docs/c.json: |
    {
      "content": "<p>Link to @a</p>",
      "monikers": []
    }
  docs/a.json: |
    {
      "content": "<p>No version</p>",
      "monikers": []
    }
  218c13d0/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.1</p>",
      "monikers": ["netcore-1.1"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  xrefmap.json: | 
    {"references":[]}
  build.log: |
    ["error","uid-conflict","Two or more documents have defined the same Uid 'a': /docs/a,/docs/b"]
    ["info","at-uid-not-found","Cannot find uid 'a' using xref '@a'","docs/c.md"]
---
# Build toc with monikers info
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: netcore-1.0 || netcore-1.1
    ---
    Moniker: netcore-1.0, netcore-1.1
  docs/v1/b.md: |
    ---
    monikerRange: netcore-1.1 || netcore-1.2
    ---
    Moniker: netcore-1.1, netcore-1.2
  docs/v1/TOC.md: |
    # [A](a.md)
    ## [B](b.md)
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" },
        { "name": "netcore-1.3", "product": ".NET Core" },
      ]
    }
outputs:
  9d4e15fd/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.0, netcore-1.1</p>",
      "monikers": ["netcore-1.0", "netcore-1.1"]
    }
  e300a7df/docs/b.json: |
    {
      "content": "<p>Moniker: netcore-1.1, netcore-1.2</p>",
      "monikers": ["netcore-1.1", "netcore-1.2"]
    }
  2420f88b/docs/toc.json: |
    {
      "items": [
        {
          "toc_title": "A",
          "href": "a",
          "children": [
            {
              "toc_title": "B",
              "href": "b",
              "monikers": ["netcore-1.1", "netcore-1.2"]
            }
          ],
          "monikers": ["netcore-1.0", "netcore-1.1", "netcore-1.2"]
        }
      ],
      "metadata": {"monikers": ["netcore-1.0", "netcore-1.1", "netcore-1.2"]}
    }
---
# Build toc with duplicate monikers
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0 < netcore-2.0'
      'docs/v2/**': '>= netcore-2.0'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: netcore-1.0
    ---
    Moniker: netcore-1.0
  docs/v2/a.md: |
    ---
    monikerRange: netcore-2.0
    ---
    Moniker: netcore-2.0
  docs/v1/TOC.md: |
    # [A](a.md)
  docs/v2/TOC.md: |
    # [A](a.md)
    # [A](../v1/a.md)
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-2.0", "product": ".NET Core" },
      ]
    }
outputs:
  136a42ac/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-1.0</p>",
      "monikers": ["netcore-1.0"]
    }
  4667fedf/docs/a.json: |
    {
      "content": "<p>Moniker: netcore-2.0</p>",
      "monikers": ["netcore-2.0"]
    }
  build.log: |
    ["error","publish-url-conflict","Two or more files of the same version('netcore-1.0') publish to the same url '/docs/toc.json': 'docs/v1/TOC.md', 'docs/v2/TOC.md'"]
---
# Build resource file with moniker
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '>= netcore-1.0'
    routes:
      docs/v1/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    ---
    monikerRange: netcore-1.0
    ---
    Moniker: netcore-1.0
    ![image](c.png)
  docs/a.md: |
    No version
    ![image](c.png)
  docs/v1/c.png:
  docs/v1/b.png:
  docs/c.png:
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
      ]
    }
outputs:
  136a42ac/docs/a.json:
  9d4e15fd/docs/c.png:
  docs/a.json:
  docs/c.png:
  build.manifest: |
    {
      "files": [
          { "siteUrl": "/docs/a" },
          { "siteUrl": "/docs/c.png", "outputPath": "docs/c.png", "sourcePath": "docs/c.png", "monikers": [] },
          { "siteUrl": "/docs/a" },
          { "siteUrl": "/docs/c.png", "outputPath": "9d4e15fd/docs/c.png", "sourcePath": "docs/v1/c.png","monikers": ["netcore-1.0", "netcore-1.1" ] }
      ],
      "dependencies": { }
    }
---
# Build resource file with moniker conflict
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '<= netcore-1.1'
      'docs/v2/**': '>= netcore-1.1'
    routes:
      docs/v1/: docs/
      docs/v2/: docs/
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
    Moniker: netcore-1.0, netcore-1.1
    ![image](c.png)
  docs/v2/a.md: |
    ---
    monikerRange: netcore-1.2
    ---
    Moniker: netcore-1.2
    ![image](c.png)
  docs/v1/c.png:
  docs/v1/b.png:
  docs/v2/c.png:
  docs/v2/b.png:
  monikerDefinition.json: |
    {
      "monikers": [
        { "name": "netcore-1.0", "product": ".NET Core" },
        { "name": "netcore-1.1", "product": ".NET Core" },
        { "name": "netcore-1.2", "product": ".NET Core" }
      ]
    }
outputs:
  9d4e15fd/docs/a.json:
  b201e604/docs/a.json:
  build.manifest: |
    {
      "files": [
          { "siteUrl": "/docs/a" },
          { "siteUrl": "/docs/a" }
      ],
      "dependencies": { }
    }
  build.log: |
    ["error","publish-url-conflict","Two or more files of the same version('netcore-1.1') publish to the same url '/docs/c.png': 'docs/v1/c.png', 'docs/v2/c.png'"]
