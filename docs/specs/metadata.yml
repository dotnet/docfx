# Metadata keys are case sensitive
inputs:
  docfx.yml: |
    globalMetadata:
      key: global
      KEY: GLOBAL
  docs/a.md: |
    ---
    key: header
    KEY: HEADER
    ---
outputs:
  docs/a.json: |
    { "key": "header", "KEY": "HEADER" }
---
# Preserve custom metadata
# read-only metadata will be kept as user input, no matter they are known by docfx or not, like uid
# overwritable metadata will be overwritten by docfx when the input is valid, otherwise it's will not be changed
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    ms.custom-metadata:
    uid:
    breadcrumb_path: "/breadcrumb_path"
    author: xxx
    ---
    # Title
outputs:
  docs/a.json: |
    { "ms.custom-metadata": null, "author":"xxx", "uid": null, "breadcrumb_path": "/breadcrumb_path", "title": "Title"}
---
# Overwrite global metadata with null in yaml header
inputs:
  docfx.yml: |
    globalMetadata:
      ms.custom-metadata: not-null
  a.md: |
    ---
    ms.custom-metadata:
    ---
outputs:
  a.json: |
    { "ms.custom-metadata": null }
---
# Report error for invalid yaml header value type
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    title: {}
    ---
outputs:
  .errors.log: |
    {"message_severity":"error","code":"violate-schema","message":"Expected type String, please input String or type compatible with String.","file":"docs/a.md","line":2,"column":8}
---
# Report error for invalid yaml header value type as array
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    author:
      - a
      - b
    ---
outputs:
  .errors.log: |
    {"message_severity":"error","code":"violate-schema","message":"Expected type String, please input String or type compatible with String.","file":"docs/a.md","line":3,"column":3}
---
# generate normal document id and version id
# backward compatible to docs.com
# document id = md5("Win.sccm|mdt/release-notes.md")
# version independent id = md5("Win.sccm|mdt/release-notes")
inputs:
  docsets.yml:
  sccm/docfx.yml: |
    name: sccm
    product: Win
    hostName: docs.com
    basePath: /sccm
  sccm/mdt/release-notes.md:
outputs:
  sccm/sccm/mdt/release-notes.json: |
    { "document_id": "0b1c8a5d-b639-d555-0850-b98a9010023c", "document_version_independent_id": "b20fdb1c-8d40-c3b2-2265-779a3f2dfe98", "depot_name": "Win.sccm" }
---
# generate index document id and version id
# backward compatible to docs.com
# document id = md5("Win.sccm|index.md") || md5("Win.sccm|mdm/index.md")
# version independent id = md5("Win.sccm|index") || md5("Win.sccm|mdm/index")
inputs:
  docsets.yml:
  sccm/docfx.yml: |
    name: sccm
    product: Win
    files: "**/*"
    hostName: docs.com
    basePath: /sccm
  sccm/mdm/index.md:
  sccm/index.md:
outputs:
  sccm/sccm/index.json: |
    { "document_id": "29602e3e-439e-865c-f1c9-2eb706f97b31", "document_version_independent_id": "34196fc5-28d6-b496-a21f-8661876802c7" }
  sccm/sccm/mdm/index.json: |
    { "document_id": "1c42a151-6248-df0c-15e6-3b1158d7bee3", "document_version_independent_id": "beb14a44-b076-14b8-b9c5-b42f9e36b973" }
---
# yaml&json toc metadata
inputs:
  docfx.yml:
  docs/json/TOC.json: |
    {
      "metadata": {"a":"b"},
      "items": [{ "name": "title" }]
    }
  docs/yaml/TOC.yml: |
    metadata:
      a: b
    items:
      - name: title
outputs:
  docs/json/toc.json: |
    {  
      "metadata": {"a": "b"},
      "items":[{"name":"title"}]
    }
  docs/yaml/toc.json: |
    {  
      "metadata": {"a": "b"},
      "items":[{"name":"title"}]
    }
---
# yaml&json toc leaf metadata
inputs:
  docfx.yml:
  docs/json/TOC.json: |
    [{ "name": "title", "a": "b" }]
  docs/yaml/TOC.yml: |
    - name: title
      a: b
outputs:
  docs/json/toc.json: |
    {  
      "items":[{"name":"title", "a": "b"}]
    }
  docs/yaml/toc.json: |
    {  
      "items":[{"name":"title", "a": "b"}]
    }
---
# yaml&json toc metadata inclusion
# child's root metadata will be dropped
inputs:
  docfx.yml:
  docs/json/TOC.json: |
    {  
      "metadata": {"a": "b"},
      "items":[{"name":"title", "c": "d"}]
    }
  docs/yaml/TOC.yml: |
    - name: toc reference
      tocHref: ../json/TOC.json
outputs:
  docs/yaml/toc.json: |
    {  
      "items":[{"name":"toc reference", "items": [{"name":"title", "c": "d"}]}]
    }
---
# TOC respect global metadata and file metadata
inputs:
  docfx.yml: |
    globalMetadata:
      a: b
    fileMetadata:
      area:
        docs/json/TOC.json: 2
  docs/json/TOC.json: '{}'
  docs/yaml/TOC.yml: |
    metadata:
      c: d
  docs/md/TOC.md:
outputs:
  docs/yaml/toc.json: |
    { "metadata": { "a": "b", "c": "d"} }
  docs/json/toc.json: |
    { "metadata": { "a": "b", "area": 2 } }
  docs/md/toc.json: |
    { "metadata": { "a": "b", "area": undefined } }
---
# Generate canonical URL
# In docs, canonical URL is later overwritten by template JINT code.
# TODO: need to handle the logic difference when template code is removed.
inputs:
  docfx.yml: |
    files: "**/*"
    hostName: docs.microsoft.com
    routes:
      articles/: azure/
  articles/app-service/index.md:
  articles/app-service/index.experimental.md:
outputs:
  azure/app-service/index.json: |
    { "canonical_url": "https://docs.microsoft.com/en-us/azure/app-service/" }
  azure/app-service/index.experimental.json: |
    { "canonical_url": "https://docs.microsoft.com/en-us/azure/app-service/" }
---
# No canonical URL for profile page
inputs:
  docfx.yml:
  a.md: |
    ---
    page_type: profile
    ---
outputs:
  a.json: |
    { "canonical_url": undefined }
---
# redirection defined in file metadata is not supported
inputs:
  docfx.yml: |
    fileMetadata:
      redirect_url:
        docs/a.md: https://docfx.com
  docs/a.md:
outputs:
  docs/a.json:
  .errors.log: |
    {"message_severity":"warning","code":"attribute-reserved","message":"Attribute redirect_url is reserved for use by Docs.","file":"docfx.yml","line":2,"column":3}
---
# document_id defined in YAML file metadata is not supported
inputs:
  docfx.yml:
  docs/index.yml: |
    ### YamlMime:YamlDocument
    documentType: LandingData
    title: some title
    metadata:
      document_id: some id
  docs/a.md:
outputs:
  docs/a.json:
  docs/index.json:
  .errors.log: |
    {"message_severity":"warning","code":"attribute-reserved","message":"Attribute document_id is reserved for use by Docs.","file":"docs/index.yml","line":5,"column":3}
---
# redirection defined in global metadata is not supported
inputs:
  docfx.yml: |
    globalMetadata:
      redirect_url: https://docfx.com
  docs/a.md:
outputs:
  docs/a.json:
  .errors.log: |
    {"message_severity":"warning","code":"attribute-reserved","message":"Attribute redirect_url is reserved for use by Docs.","file":"docfx.yml","line":2,"column":3}
---
# resolve breadcrumb_path
inputs:
  docfx.yml: |
    globalMetadata:
      breadcrumb_path: ~/breadcrumbs/TOC.json
  a.md:
  breadcrumbs/TOC.json: '{}'
outputs:
  a.json: |
    { "breadcrumb_path": "breadcrumbs/toc.json" }
  breadcrumbs/toc.json:
---
# resolve breadcrumb_path relative to the declaring file
inputs:
  docfx.yml: |
    globalMetadata:
      breadcrumb_path: breadcrumbs/TOC.json
  a-folder/a.md:
  breadcrumbs/TOC.json: '{}'
outputs:
  a-folder/a.json: |
    { "breadcrumb_path": "../breadcrumbs/toc.json" }
  breadcrumbs/toc.json:
---
# Metadata should work for fields marked with SourceInfo<T>
inputs:
  docfx.yml: |
    fileMetadata:
      author:
        '**/*': name
  a.md:
outputs:
  a.json:
---
# Duplicated metadata
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    a: a
    a: b
    ---
outputs:
  docs/a.json: |
    {"a": "b"}
  .errors.log: |
    {"message_severity":"suggestion","code":"yaml-duplicate-key","message":"Key 'a' is already defined, remove the duplicate key. NOTE: This Suggestion will become a Warning on 06/30/2020.","file":"docs/a.md","line":3,"column":1}
---
# Invalid yaml syntax in yaml header
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    a: a: b
    title: A
    ---
    # B
outputs:
  docs/a.json: |
    {"a": undefined, "title": "B"}
  .errors.log: |
    {"message_severity":"warning","code":"yaml-header-syntax-error","file":"docs/a.md","line":2,"column":5}
---
# Input metadata doesn't overwrite system generated metadata
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    wordCount: 15
    document_id: 123
    ---
outputs:
  docs/a.json: |
    { "wordCount": 0, "document_id": "fa697b4e-3e52-77f6-2219-39040f6070da" }
  .errors.log: |
    {"message_severity":"warning","code":"attribute-reserved","message":"Attribute wordCount is reserved for use by Docs.","file":"docs/a.md","line":2,"column":1}
    {"message_severity":"warning","code":"attribute-reserved","message":"Attribute document_id is reserved for use by Docs.","file":"docs/a.md","line":3,"column":1}
---
# Title in file metadata should overwrite H1
inputs:
  docfx.yml: |
    fileMetadata:
      title:
        docs/a.md: Title to overwrite
  docs/a.md: |
    # Title for a
outputs:
  docs/a.json: |
    {"title": "Title to overwrite"}
---
# Generate _op_pdfUrlPrefixTemplate when pdf is true
inputs:
  docfx.yml: |
    outputPdf: true
  a.md:
outputs:
  a.json: |
    { "_op_pdfUrlPrefixTemplate": "https://docs.com/pdfstore/en-us/./{branchName}" }
---
# Support tilde_path
inputs:
  docfx.yml:
  a/a.md: |
    ---
    tilde_path: 'a'
    ---
    [link to b](~/b.md)
  a/b.md:
outputs:
  a/a.json:
  a/b.json:
