# Support ECMA2Yaml ops config
os: windows, osx
skipInputCheck: true
repos:
  https://github.com/ops/ecma-yaml:
  - files:    
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [
          { 
            "build_source_folder": ".",
            "ECMA2Yaml":
            {
              "SourceXmlFolder": "xml",
              "OutputYamlFolder": "api",
              "Flatten": true,
              "SDPMode": true,
            },
          }],
        }
      docfx.yml:
      xml/ns-CatLibrary.xml: |
        <Namespace Name="CatLibrary">
          <Docs>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
          </Docs>
        </Namespace>
      xml/CatLibrary/Cat`2.xml: |
        <Type Name="Cat&lt;T,K&gt;" FullName="CatLibrary.Cat&lt;T,K&gt;">
          <TypeSignature Language="C#" Value="public class Cat&lt;T,K&gt; where T : class, new() where K : struct" />
          <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Cat`2&lt;class .ctor T, struct .ctor (class System.ValueType) K&gt; extends System.Object" />
          <TypeSignature Language="DocId" Value="T:CatLibrary.Cat`2" />
          <AssemblyInfo>
            <AssemblyName>CatLibrary</AssemblyName>
            <AssemblyVersion>1.0.0.0</AssemblyVersion>
          </AssemblyInfo>
          <TypeParameters>
            <TypeParameter Name="T">
            </TypeParameter>
            <TypeParameter Name="K">
            </TypeParameter>
          </TypeParameters>
          <Base>
            <BaseTypeName>System.Object</BaseTypeName>
          </Base>
          <Interfaces />
          <Docs>
            <typeparam name="T">This type should be class and can new instance.</typeparam>
            <typeparam name="K">This type is a struct type, class type can't be used for this parameter.</typeparam>
          </Docs>
          <Members>
            <Member MemberName=".ctor">
              <MemberSignature Language="C#" Value="public Cat (T thisType);" />
              <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T thisType) cil managed" />
              <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.#ctor(`0)" />
              <MemberType>Constructor</MemberType>
              <AssemblyInfo>
                <AssemblyName>CatLibrary</AssemblyName>
                <AssemblyVersion>1.0.0.0</AssemblyVersion>
              </AssemblyInfo>
              <Parameters>
                <Parameter Name="thisType" Type="T" />
              </Parameters>
              <Docs>
                <param name="thisType">This parameter type defined by class.</param>
                <summary>
                    Constructor with one generic parameter.
                    </summary>
                <remarks>To be added.</remarks>
              </Docs>
            </Member>
          </Members>
        </Type>
      xml/FrameworksIndex/cat-1.0.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <Framework Name="cat-1.0">
          <Assemblies>
            <Assembly Name="CatLibrary" Version="1.0.0.0" />
          </Assemblies>
          <Namespace Name="CatLibrary">
            <Type Name="CatLibrary.Cat`2" Id="T:CatLibrary.Cat`2">
              <Member Id="M:CatLibrary.Cat`2.#ctor(`0)" />
            </Type>
          </Namespace>
        </Framework>
      _themes/ContentTemplate/schemas/NetNamespace.schema.json: |
        {}
      _themes/ContentTemplate/schemas/NetMember.schema.json: |
        {}
      _themes/ContentTemplate/schemas/NetType.schema.json: |
        {}
outputs:
  .errors.log: |
    ["warning","xref-not-found","Cross reference not found: 'CatLibrary'","api/toc.yml",3,8]
    ["warning","xref-not-found","Cross reference not found: 'CatLibrary.Cat`2'","api/toc.yml",6,10]
    ["warning","xref-not-found","Cross reference not found: 'CatLibrary.Cat`2.#ctor*'","api/toc.yml",9,12]
  api/toc.json:
  api/catlibrary.cat-2.-ctor.json:
  api/catlibrary.cat-2.json:
  api/catlibrary.json:
