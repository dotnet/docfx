# Generate Service Page
repos:
  https://github.com/ops/service-page:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {
              "ReferenceTOC": "a/api/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
              "OutputFolder": "a/results",
              "ContainerPageMetadata": {"langs": ["csharp"]}
            }
          ],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"},
            "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              },
              "type": "array",
              "minItems": 1
            },
            "langs": { "items": {"type": "string"}, "type": "array", "minItems": 1 },
            "pageType": { "enum": ["root", "service"], "type": "string" },
            "metadata": {
              "properties": { "description": { "type": "string","tags": ["localizable"] }, "title": { "type": "string", "tags": ["localizable"] } },
              "type": "object"
            }
          }
        }
      a/_themes/ContentTemplate/schemas/TestData.schema.json: |
        {
          "properties": {
            "uid": { "contentType": "uid" },
            "fullName": { "type": "string" },
            "name": { "type": "string" }
          },
          "xrefProperties": ["name", "fullName", "description"]
        }
      a/api/doc.md: |
        ---
        name: test
        uid: MS.ServicePage
        ---
      a/api/a.json: |
        {
          "$schema": "https://raw.githubusercontent.com/dotnet/docfx/v3/schemas/TestData.json",
          "uid": "aa", "name": "test", "fullName": "test.test", "description": "a.description"
        }
      a/api/toc.yml: |
        name: TOC
        items:
        - name: MS.ServicePage.xxx
          items:
            - name: xxx
        - name: MS.ServicePage.Client.Form
        - name:
        - name: no.match
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: App Service
            href: ~/api/doc.md
            landingPageType: Service
            items:
            - name: Client
              href: ../api/doc.md
              landingPageType: Service
              children:
              - 'MS.ServicePage*'
              items:
                  - name: Client
                    landingPageType: Service
                    children:
                    - 'MS.ServicePage.Client*'
                    - 'MS.ServicePage.Server*'
            - name: Other
              children:
              - '*'
outputs:
  a/api/a.json:
  a/api/doc.json:
  a/api/toc.json:
  a/results/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "App Service", "href": "../api/doc"}], "langs": ["csharp"], "pageType": "root"}
  a/results/appservice/client/client.json: |
    {"name":"Client","fullName":"Client","langs":["csharp"],"pageType":"service"}
---
# Service Page href fix: TopLevelTOC and ReferenceTOC in different directory hierarchy
repos:
  https://github.com/ops/service-page2:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md:
      a/api/bot/toc.yml: |
        name: TOC
        items:
        - name: MS.ServicePage.xxx
          href: ../../test/doc.md
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "MS.ServicePage.xxx", "href": "../../test/doc"}], "pageType": "root"}
---
# item-href in service-page linking to a splitted toc
# Service Page href fix: TopLevelTOC and ReferenceTOC in different directory hierarchy
repos:
  https://github.com/ops/service-page-splitted-toc:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a", "SplitTOC": ["api/bot/toc.yml"]}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md:
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage2.xxx
          items:
          - name: MS.ServicePage.xxx
            href: ../../test/doc.md
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json:
  a/api/bot/_splitted/ms.servicepage2.xxx/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "MS.ServicePage2.xxx"}], "pageType": "root"}
---
# make overview page for service pages
repos:
  https://github.com/ops/service-page-overview:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a", "SplitTOC": ["api/bot/toc.yml"]}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md:
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage2.xxx
          items:
          - name: MS.ServicePage.xxx
            href: ../../test/doc.md
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: API Test
            href: ../test/doc.md
            children:
            - 'MS.ServicePage*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json: |
    {
      "items": [
        {
          "name": "API Reference",
          "items": [
            { "name": "Overview", "href": "./" },
            {
              "name": "API Test",
              "items": [
                { "name": "Overview", "href": "../../test/doc" },
                { "name": "MS.ServicePage2.xxx", "href": "../../test/doc" }
              ]
            }
          ]
        }
      ]
    }
  a/api/bot/_splitted/ms.servicepage2.xxx/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "API Test"}], "pageType": "root"}
---
# service-page: when childHref is empty, set it to null
repos:
  https://github.com/ops/service-page-childhref-empty:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/api/bot/toc.yml: |
        name: TOC
        items:
        - name: MS.ServicePage.xxx
          href: ""
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage*'
outputs:
  a/api/bot/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "MS.ServicePage.xxx", "href": undefined}], "pageType": "root"}
---
# remove uid when href exists
repos:
  https://github.com/ops/service-remove-uid-when-href-exists:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a", "SplitTOC": ["api/bot/toc.yml"]}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md:
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage2.xxx
          items:
          - name: MS.ServicePage.xxx
            href: ../../test/doc.md
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: API Test
            uid: APIReference.APITest
            href: ../test/doc.md
            children:
            - 'MS.ServicePage*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json: |
    {
      "items": [
        {
          "name": "API Reference",
          "items": [
            { "name": "Overview", "href": "./", "uid": undefined},
            {
              "name": "API Test",
              "items": [
                { "name": "Overview", "href": "../../test/doc" },
                { "name": "MS.ServicePage2.xxx", "href": "../../test/doc" }
              ]
            }
          ]
        }
      ]
    }
  a/api/bot/_splitted/ms.servicepage2.xxx/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "API Test"}], "pageType": "root"}
---
# use first SubTocUid for service-page when href and uid are both empty
repos:
  https://github.com/ops/service-page-use-subtocuid:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md: |
        ---
        name: a
        uid: test
        ---
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
          items:
          - name: MS.test
            uid: test
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - '*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "MS.ServicePage.xxx", "uid": "test"}], "pageType": "root"}
---
# do not generate service-page if the docfx.json doesn't include these files
repos:
  https://github.com/ops/service-page-docfx-filter:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
             "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
             "OutputFolder": "a/results"}],
        }
      a/docfx.json: |
        {
          "build": {
            "content": [
              {
                "files": ["**/*"],
                "src": ".",
                "exclude": ["**/results/**"]
              }
            ]
          }
        }
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md: |
        ---
        name: a
        uid: test
        ---
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
          items:
          - name: MS.test
            uid: test
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - '*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json:
---
# item-href in service-page linking to a splitted toc (relative folder)
repos:
  https://github.com/ops/service-page-splitted-toc_:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a", "SplitTOC": ["api/bot/toc.yml"]}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/doc.md: |
        ---
        title: a-content
        uid: a
        ---
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage2.xxx
          uid: a
          items:
          - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage*'
outputs:
  a/test/doc.json:
  a/api/bot/toc.json:
  a/api/bot/_splitted/ms.servicepage2.xxx/toc.json:
  a/api/bot/index.json: |
    {"name": "API Reference", "fullName": "API Reference", "children": [{"name": "MS.ServicePage2.xxx"}], "pageType": "root"}
---
# do not generate service pages when a md file is specified
repos:
  https://github.com/ops/service-page-fix-publish-url-conflict:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
              "OutputFolder": "a/test"
              }]
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/Client.md: |
        # hello world
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: Client
            href: ~/test/Client.md
            landingPageType: Service
            children:
            - 'MS.ServicePage*'
outputs:
  a/test/client.json: |
    {"title": "hello world"}
  a/api/bot/toc.json:
  a/test/index.json:
---
# Split toc metadata when no conceptual toc in JoinTocPlugin
repos:
  https://github.com/ops/split-toc-metadata:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a", "SplitTOC": ["api/bot/toc.yml"]}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
              "ReferenceTOCUrl": "/a/b/toc"}],
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": { 
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage2.xxx
          items:
          - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
outputs:
  a/api/bot/toc.json:
  a/api/bot/_splitted/ms.servicepage2.xxx/toc.json: |
    {"metadata": {"universal_ref_toc": "/a/b/toc"}}
---
# output path conflicts for generated service pages
repos:
  https://github.com/ops/service-page-output-path-conflict2:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
              "OutputFolder": "a/test"
              }]
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": {
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test/index.md: |
        # hello world
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: Client2
            href: ~/test/index.md
            landingPageType: Service
            children:
            - 'MS.ServicePage*'
outputs:
  a/test/index.json:
  a/api/bot/toc.json:
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files publish to the same url '/test/': 'test/index.md', 'test/index.yml [generated]'."}
---
# publish url conflicts for generated service pages
repos:
  https://github.com/ops/service-page-fix-publish-url-conflicts:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [{  "build_source_folder": "a"}],
          "JoinTOCPlugin": [
            {"ReferenceTOC": "a/api/bot/toc.yml",
              "TopLevelTOC": "a/docs-ref-toc/top_level_toc.yml",
              "OutputFolder": "a/test"
            }
          ]
        }
      a/docfx.yml: |
        monikerRange:
          'test1/**' : '>= v-0.1 <= v-0.2'
          'test/**' : '>= v-0.2 <= v-0.3'
        routes:
          test1/: docs/
          test/: docs/
        monikerDefinition: monikerDefinition.json
      a/monikerDefinition.json: |
        {
          "monikers": [
            { "moniker_name": "v-0.1", "product_name": ".NET Core" },
            { "moniker_name": "v-0.2", "product_name": ".NET Core" },
            { "moniker_name": "v-0.3", "product_name": ".NET Core" },
          ]
        }
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": {
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/test1/index.md: |
        # hello world
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: Client2
            href: ~/test1/index.md
            landingPageType: Service
            children:
            - 'MS.ServicePage*'
outputs:
  a/cfcd556ac4916a1bf6fe758453d01e39/docs/index.json: |
    {"title": "hello world"}
  a/api/bot/toc.json:
  .errors.log: |
    {"message_severity":"warning","code":"publish-url-conflict","message":"Two or more files publish to the same url '/docs/': 'test/index.yml [generated]', 'test1/index.md'."}
  a/.publish.json: |
    {
      "files": [
        {
          "url": "/docs/",
          "path": "cfcd556ac4916a1bf6fe758453d01e39/docs/index.json",
          "source_path": "test1/index.md",
          "config_moniker_range": ">= v-0.1 <= v-0.2",
          "moniker_group": "cfcd556ac4916a1bf6fe758453d01e39",
          "_path": "docs/index.json",
          "monikers": ["v-0.1", "v-0.2"]
        },
        {
          "url": "/api/bot/toc.json",
          "path": "api/bot/toc.json",
          "source_path": "api/bot/toc.yml"
        }
      ]
    }
---
# joinTocPlugin in docset folder
repos:
  https://github.com/ops/service-page-output-path-conflict2:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [
            {
              "build_source_folder": "a",
              "JoinTOCPlugin": [
                {
                  "ReferenceTOC": "api/bot/toc.yml",
                  "TopLevelTOC": "docs-ref-toc/top_level_toc.yml",
                  "OutputFolder": "result"
                }
              ]
            }
          ]
        }
      a/docfx.yml:
      a/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": {
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      a/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.xxx
      a/docs-ref-toc/top_level_toc.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: Client
            landingPageType: Service
            children:
            - '**'
outputs:
  a/api/bot/toc.json:
  a/result/index.json:
  a/result/client.json:
---
# Generate a TOC for each moniker
repos:
  https://github.com/ops/join-toc-with-monikers-in-reference-toc:
  - files:
      .openpublishing.publish.config.json: |
        {
          "docsets_to_publish": [
            {
              "build_source_folder": "docs",
              "SplitTOC": [
                "api/bot/legacy/toc.yml",
                "api/bot/latest/toc.yml",
                "api/bot/preview/toc.yml"
              ],
              "JoinTOCPlugin": [
                {
                  "ReferenceTOC": "api/bot/legacy/toc.yml",
                  "TopLevelTOC": "docs-ref-toc/top-level-toc-legacy.yml",
                  "OutputFolder": "result-legacy",
                  "OriginalReferenceTOC": "api/bot/toc.yml"
                },
                {
                  "ReferenceTOC": "api/bot/latest/toc.yml",
                  "TopLevelTOC": "docs-ref-toc/top-level-toc-latest.yml",
                  "OutputFolder": "result-latest",
                  "OriginalReferenceTOC": "api/bot/toc.yml"
                },
                {
                  "ReferenceTOC": "api/bot/preview/toc.yml",
                  "TopLevelTOC": "docs-ref-toc/top-level-toc-preview.yml",
                  "OutputFolder": "result-preview",
                  "OriginalReferenceTOC": "api/bot/toc.yml"
                }
              ]
            }
          ]
        }
      docs/docfx.yml: |
        build:
          content:
            files: "**/*"
            exclude:
            - docs-ref-toc/top-level-toc-legacy.yml
            - docs-ref-toc/top-level-toc-latest.yml
            - docs-ref-toc/top-level-toc-preview.yml
      docs/_themes/ContentTemplate/schemas/ReferenceContainer.schema.json: |
        {
          "type": "object",
          "required": ["name", "pageType"],
          "properties": {
            "uid": {"contentType": "uid", "type": "string"},
            "name": {"type": "string"}, "fullName": {"type": "string"},
            "children": {
              "items": {
                "type": "object", "additionalProperties": false,
                "properties": {
                  "href": {"contentType": "href", "type": "string"},
                  "uid": {"contentType": "xref", "type": "string"},
                  "name": {"type": "string"}
                }
              }, "type": "array", "minItems": 1},
            "pageType": { "enum": ["root", "service"], "type": "string" }
          }
        }
      docs/overview/legacy.md:
      docs/overview/latest.md:
      docs/overview/preview.md:
      docs/docs-auto-gen/legacy.md: |
        ---
        name: legacy-doc
        uid: legacy
        ---
      docs/docs-auto-gen/latest.md: |
        ---
        name: latest-doc
        uid: latest
        ---
      docs/docs-auto-gen/preview.md: |
        ---
        name: preview-doc
        uid: preview
        ---
      docs/toc.yml: |
        items:
        - name: a
      docs/api/bot/toc.yml: |
        items:
        - name: MS.ServicePage.legacy.test
          items:
          - name: legacy
            uid: legacy
          monikers:
          - legacy
        - name: MS.ServicePage.latest.test
          items:
          - name: latest
            uid: latest
          monikers:
          - latest
        - name: MS.ServicePage.preview.test
          items:
          - name: preview
            uid: preview
          monikers:
          - preview
      docs/docs-ref-toc/top-level-toc-legacy.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage.legacy*'
      docs/docs-ref-toc/top-level-toc-latest.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          children:
          - 'MS.ServicePage.latest*'
      docs/docs-ref-toc/top-level-toc-preview.yml: |
        items:
        - name: API Reference
          landingPageType: Root
          items:
          - name: App Service
            landingPageType: Service
            items:
            - name: preview docs
              children:
              - 'MS.ServicePage.preview*'
outputs:
  docs/toc.json:
  docs/overview/legacy.json:
  docs/overview/latest.json:
  docs/overview/preview.json:
  docs/docs-auto-gen/legacy.json:
  docs/docs-auto-gen/latest.json:
  docs/docs-auto-gen/preview.json:
  docs/result-legacy/index.json: |
    {
        "children": [ { "name": "MS.ServicePage.legacy.test", "uid": "legacy" } ],
        "fullName": "API Reference",
        "metadata": {
            "_path": "result-legacy/index.json",
            "_tocRel": "../api/bot/legacy/toc.json"
        },
        "name": "API Reference",
        "pageType": "root",
        "schema": "ReferenceContainer"
    }
  docs/result-latest/index.json: |
    {
        "children": [ { "name": "MS.ServicePage.latest.test", "uid": "latest" } ],
        "fullName": "API Reference",
        "metadata": {
            "_path": "result-latest/index.json",
            "_tocRel": "../api/bot/latest/toc.json",
        },
        "name": "API Reference",
        "pageType": "root",
        "schema": "ReferenceContainer"
    }
  docs/result-preview/index.json: |
    {
        "children": [ { "href": "appservice", "name": "App Service" } ],
        "fullName": "API Reference",
        "metadata": {
            "_path": "result-preview/index.json",
            "_tocRel": "../api/bot/preview/toc.json"
        },
        "name": "API Reference",
        "pageType": "root",
        "schema": "ReferenceContainer"
    }
  docs/result-preview/appservice.json: |
    {
        "children": [ { "name": "preview docs" } ],
        "fullName": "App Service",
        "metadata": {
            "_path": "result-preview/appservice.json",
            "_tocRel": "../api/bot/preview/toc.json"
        },
        "name": "App Service",
        "pageType": "service",
        "schema": "ReferenceContainer"
    }
  docs/api/bot/legacy/toc.json: |
    {
      "items": [
        {
          "items": [
            { "href": "../../../result-legacy/", "name": "Overview" },
            { "href": "../../../docs-auto-gen/legacy", "name": "MS.ServicePage.legacy.test" }
          ],
          "name": "API Reference"
        }
      ]
    }
  docs/api/bot/legacy/_splitted/ms.servicepage.legacy.test/toc.json:
  docs/api/bot/legacy/_splitted/ms.servicepage.latest.test/toc.json:
  docs/api/bot/legacy/_splitted/ms.servicepage.preview.test/toc.json:
  docs/api/bot/latest/toc.json: |
    {
      "items": [
        {
          "items": [
            { "href": "../../../result-latest/", "name": "Overview" },
            { "href": "../../../docs-auto-gen/latest", "name": "MS.ServicePage.latest.test"}
          ],
          "name": "API Reference"
        }
      ]
    }
  docs/api/bot/latest/_splitted/ms.servicepage.legacy.test/toc.json:
  docs/api/bot/latest/_splitted/ms.servicepage.latest.test/toc.json:
  docs/api/bot/latest/_splitted/ms.servicepage.preview.test/toc.json:
  docs/api/bot/preview/toc.json: |
    {
      "items": [
        {
          "items": [
            { "href": "../../../result-preview/", "name": "Overview" },
            {
              "items": [
                { "href": "../../../result-preview/appservice", "name": "Overview" },
                {
                  "items": [ { "href": "../../../docs-auto-gen/preview", "name": "MS.ServicePage.preview.test" } ],
                  "name": "preview docs"
                }
              ],
              "name": "App Service"
            }
          ],
          "name": "API Reference"
        }
      ]
    }
  docs/api/bot/preview/_splitted/ms.servicepage.legacy.test/toc.json:
  docs/api/bot/preview/_splitted/ms.servicepage.latest.test/toc.json:
  docs/api/bot/preview/_splitted/ms.servicepage.preview.test/toc.json:
  docs/.xrefmap.json:
  docs/filemap.json:
