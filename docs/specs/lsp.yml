---
# Basic lsp test
inputs:
  docfx.yml:
languageServer:
  - openFiles:
      a.md: "# Heading\nInvalid Link [B](b.md)"
  - expectDiagnostics:
      a.md:
      - range:
          start: { "line": 1, "character": 13 }
          end: { "line": 1, "character": 13 }
        severity: 2
        code: file-not-found
        source: Docs Validation
        message: "Invalid file link: 'b.md'."
  - editFiles:
      a.md: New Content
  - expectDiagnostics:
      a.md: []
---
# Multiple docsets
inputs:
  docsets.yml:
  a/docfx.yml:
  a/a.md:
  a/b.md:
  b/docfx.yml:
  b/a.md:
  b/b.md:
languageServer:
  - openFiles:
      a/a.md: "[Test](non-existed.md)"
  - expectDiagnostics:
      a/a.md: [{ "code": "file-not-found", "message": "Invalid file link: 'non-existed.md'."}]
---
# All the opened file should be built in a build round
inputs:
  docfx.yml:
  a.md:
  b.md:
languageServer:
  - openFiles:
      a.md: "[Test](non-existed.md)"
  - expectDiagnostics: 
      a.md: [{ "code": "file-not-found" }]
  - openFiles:
      b.md: "[Test](non-existed.md)"
  - expectDiagnostics: 
      a.md: [{ "code": "file-not-found" }]
      b.md: [{ "code": "file-not-found" }]
---
# Open/Change of files out of current repo should not trigger build
inputs:
  docfx.yml:
  a.md:
languageServer:
  - openFiles:
      a.md: "[Test](non-existed.md)"
  - expectDiagnostics: 
      a.md: [{ "code": "file-not-found" }]
  - openFiles:
      '../a.md': "Invalid change"
  - expectNoNotification: true
---
# Diagnostic should be cleared when the file get closed
inputs:
  docfx.yml:
  a.md:
languageServer:
  - openFiles:
      a.md: "[Test](non-existed.md)"
  - expectDiagnostics: 
      a.md: [{ "code": "file-not-found" }]
  - closeFiles:
    - a.md
  - expectDiagnostics: 
      a.md: []
---
# 1. All the detected issues should be reported no matter it is opened or not
# 2. They should also be cleared when the caused file gets closed.
inputs:
  docfx.yml:
  a.md:
  b.md: |
    [Test](non-existed.md)
languageServer:
  - openFiles:
      a.md: "[!INCLUDE[](b.md)]"
  - expectDiagnostics: 
      a.md: []
      b.md: [{ "code": "file-not-found" }]
  - closeFiles:
    - a.md
  - expectDiagnostics: 
      b.md: []
---
# All the issues should be cleared when there is no opened file
inputs:
  docfx.yml: "{"
  a.md:
languageServer:
  - openFiles:
      a.md: "[!INCLUDE[](b.md)]"
  - expectDiagnostics: 
      docfx.yml: [{ "code": "yaml-syntax-error" }]
  - closeFiles:
    - a.md
  - expectDiagnostics: 
      docfx.yml: []
      a.md: []
---
# Isolate bookmark validation states between builds
inputs:
  docfx.yml:
languageServer:
  - openFiles:
      a.md: "[](b.md#anchor-missing)"
      b.md: "## anchor"
  - expectDiagnostics: 
      a.md: [{ "code": "bookmark-not-found" }]
  - openFiles:
      a.md: "[](b.md#anchor)"
      b.md: "## anchor"
  - expectDiagnostics: 
      a.md: []
