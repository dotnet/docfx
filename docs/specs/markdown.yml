---
# Hello World
inputs:
  docfx.yml:
  docs/a.md: Hello `docfx`!
outputs:
  docs/a.json: |
    { "content": "<p>Hello <code>docfx</code>!</p>" }
  build.manifest:
---
# Basic markdown syntax
inputs:
  docfx.yml:
  docs/a.md: _this_ *is* an ***inline*** `markdown` **test**
outputs:
  docs/a.json: |
    { "content": "<p><em>this</em> <em>is</em> an <em><strong>inline</strong></em> <code>markdown</code> <strong>test</strong></p>" }
  build.manifest:
---
# Yaml header
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    title: me
    ---
    hello
outputs:
  docs/a.json: |
    {
      "content": "<p>hello</p>",
      "metadata": { "title": "me" }
    }
  build.manifest:
---
# include another file
inputs:
  docfx.yml:
  docs/a.md: a [!INCLUDE[](b.md)]
  docs/b.md: b
outputs:
  docs/a.json: |
    { "content": "<p>a b</p>" }
  docs/b.json: |
    { "content": "<p>b</p>" }
  build.manifest:
---
# note
inputs:
  docfx.yml:
  docs/a.md: |
    >[!NOTE]
    >note
outputs:
  docs/a.json: |
    { "content": "<div class=\"NOTE\"><p>Note</p><p>note</p></div>" }
  build.manifest:
---
# title
inputs:
  docfx.yml:
  docs/a.md: |
    ---
    author: me
    ---
    # Title
    
    body
outputs:
  docs/a.json: |
    {
      "content": "<p>body</p>",
      "title": "Title",
      "metadata":
      {
        "author": "me"
      }
    }
  build.manifest:
---
# do not allow custom js, styles and css
inputs:
  docfx.yml:
  docs/a.md: |
    <script>alert(0);</script>
    <link rel="stylesheet" href="https://a.com/b.css" />
    <div style="display:hidden"></div>
    <style>h1 {color:red;}</style>

    body
outputs:
  docs/a.json: |
    { "content": "<div></div><p>body</p>" }
  build.manifest:
