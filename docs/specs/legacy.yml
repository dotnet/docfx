# Build with --legacy
commands:
  - restore --legacy
  - build --legacy
repos:
  https://docs.com/legacy:
  - files:
      docfx.yml: |
        template: https://docs.com/theme
        redirections:
          a.md: /b
        metadataSchema: schema.json
      c.md: |
        ---
        api_name:
          - "API Name"
        ms.author: yufeih
        ---
        [d](d.png)
      d.png:
      TOC.md: |
        # [c](c.md)
      schema.json: |
        {
          "properties": {
            "api_name": { "htmlMetaName": "APIName" }
          },
          "htmlMetaHidden": ["conceptual", "is_dynamic_rendering", "canonical_url"]
        }
  https://docs.com/theme:
  - files:
      ContentTemplate/Conceptual.mta.json.js: |
        exports.transform = function (model) {
          return {
            content: JSON.stringify(model)
          }
        }
      ContentTemplate/toc.json.js: |
        exports.transform = function (model) {
          return {
            content: JSON.stringify(model)
          }
        }
outputs:
  a.raw.page.json:
  a.mta.json: |
    { "locale": "en-us", "redirect_url": "/b" }
  c.raw.page.json: |
    {
      "content": "<p><a href=\"d.png\" data-linktype=\"relative-path\">d</a></p>",
      "rawMetadata": { "conceptual": "<p><a href=\"d.png\" data-linktype=\"relative-path\">d</a></p>\n", "ms.author": "yufeih", "!robots": null, "api_name": ["API Name"] },
      "themesRelativePathToOutputRoot": "_themes/",
      "pageMetadata": "
        <meta name=\"APIName\" content=\"API Name\" />
        <meta name=\"depot_name\" content=\".\" />
        <meta name=\"document_id\" content=\"fdb5a0d7-b68e-c465-9c5e-54a5cda94902\" />
        <meta name=\"document_version_independent_id\" content=\"92a5a770-f05f-b8bb-81c9-a8d786a9e608\" />
        <meta name=\"locale\" content=\"en-us\" />
        <meta name=\"ms.author\" content=\"yufeih\" />
        <meta name=\"rawTitle\" content=\"\" />
        <meta name=\"search.ms_docsetname\" content=\"\" />
        <meta name=\"search.ms_product\" content=\"\" />
        <meta name=\"search.ms_sitename\" content=\"Docs\" />
        <meta name=\"site_name\" content=\"Docs\" />
        <meta name=\"toc_rel\" content=\"toc.json\" />
        <meta name=\"updated_at\" content=\"2018-10-30 12:00 AM\" />
        <meta name=\"wordCount\" content=\"1\" />"
    }
  c.mta.json: |
    { "locale": "en-us", "ms.author": "yufeih", "is_dynamic_rendering": true }
  toc.json:
  toc.mta.json:
  .manifest.json:
  .dependency-map.json:
  filemap.json:
  op_aggregated_file_map_info.json:
  .publish.json:
  xrefmap.json:
  server-side-dependent-list.txt:
  full-dependent-list.txt:
---
# Raw metadata generated for template
# todo: remove this test and make raw model as our page model
repos:
  https://github.com/a/rawmetadata:
  - author: Charlie
    email: charlie@contoso.com
    files:
      docfx.yml: |
        template: https://docs.com/template1
        redirections:
          a.md: /b
        gitHub:
          resolveUsers: true
        baseUrl: https://docs.com/rawmetadata
      c.md: |
        ---
        api_name:
          - "API Name"
        ms.author: bob
        author: bob
        ---
        # Title
        [d](d.png)
      d.png:
      TOC.md: |
        # [c](c.md)
      index.yml: |
        ### YamlMime:YamlDocument
        documentType: LandingData
        metadata:
          document_id: abc
  https://docs.com/template1:
  - files:
      readme.md:
cache:
  github-users.json: |
    { "users": [
        {"name": "Bob", "login": "bob", "id": 2, "emails": ["bob@contoso.com"]},
        {"name": "Charlie", "login": "charlie", "id": 3, "emails": ["charlie@contoso.com"]}
      ]
    }
outputs:
  rawmetadata/c.json:
  rawmetadata/d.png:
  rawmetadata/toc.json:
  rawmetadata/index.json:
  .publish.json: |
    {"files": [
      {
        "url": "/rawmetadata/a",
        "redirect_url": "/b"
      }, 
      {
        "url": "/rawmetadata/c",
        "api_name": ["API Name"],
        "ms.author": "bob",
        "depot_name": ".",
        "search.ms_docsetname": "",
        "search.ms_product": "",
        "search.ms_sitename": "Docs",
        "locale": "en-us",
        "site_name": "Docs",
        "__global": {
        },
        "conceptual": "\n<p><a href=\"d.png\">d</a></p>\n",
        "_path": "c.json",
        "toc_rel": "toc.json",
        "wordCount": 2,
        "title": "Title",
        "rawTitle": "<h1 id=\"title\">Title</h1>",
        "_op_canonicalUrlPrefix": "https://docs.com/en-us/rawmetadata/",
        "document_id": "fdb5a0d7-b68e-c465-9c5e-54a5cda94902",
        "document_version_independent_id": "92a5a770-f05f-b8bb-81c9-a8d786a9e608",
        "_op_gitContributorInformation": {
        "update_at": "10/30/2018",
        "updated_at_date_time": "2018-10-30T00:00:00Z",
          "contributors": [{
            "display_name": "Charlie",
            "id": "3"
          }],
          "author": {
            "display_name": "Bob",
            "id": "2",
          }
        },
        "updated_at": "2018-10-30 12:00 AM",
        "content_git_url": "https://github.com/a/rawmetadata/blob/master/c.md",
        "gitcommit": "https://github.com/a/rawmetadata/blob/5cb844f400525147e40455b6f1adf54646de2693/c.md",
        "original_content_git_url": "https://github.com/a/rawmetadata/blob/master/c.md",
        "original_content_git_url_template": "{repo}/blob/{branch}/c.md",
        "!metadata": null,
        "!contributors": null,
        "!enable_loc_sxs": null,
        "!content": null,
        "!schema_type": null,
        "!author_info": null,
        "!monikers": null,
      },
      {
        "url": "/rawmetadata/d.png"
      },
      {
        "url": "/rawmetadata/",
        "document_id": "b3c1f04b-5bdb-1c10-5237-024cf382b4cc",
        "_path": "index.json",
        "_op_gitContributorInformation": {
          "update_at": "10/30/2018",
          "updated_at_date_time": "2018-10-30T00:00:00Z",
          "author": {
            "name": "charlie",
            "profile_url": "https://github.com/charlie",
            "display_name": "Charlie",
            "id": "3"
          },
          "!contributors": null
      },
      },
      {
        "url": "/rawmetadata/toc.json"
      }]
    }
  .errors.log:
---
# Resolve link for landing page
inputs:
  docfx.yml:
  docs/index.yml: |
    ### YamlMime:YamlDocument
    title: REST API Documentation

    documentType: LandingData
    abstract:
      description: <a href="~/b">"b"</a>
      menu:
        items:
        - href: ~/b
  b.md: b
outputs:
  docs/index.json: |
    {
      "title": "REST API Documentation",
      "abstract": {
          "description": "<p><a href=\"../b\">&quot;b&quot;</a></p>\n",
          "menu": {
              "items": [
                  {
                      "href": "../b"
                  }
              ]
          }
      },
      "documentType": "LandingData"
    }
  b.json:
---
# Produce deterministic result when redirection and file share the same publish url
commands:
  - build --legacy
inputs:
  docfx.yml: |
    redirections:
      docs/a.md: /asdf
  docs/a.md:
outputs:
  .errors.log:
---
# Redirection file href shouldn't have extension
commands:
  - build --legacy
inputs:
  docfx.yml: |
    redirections:
      redirect.md: /redirect/to
  a.md: |
    [link](redirect.md)
outputs:
  a.mta.json:
  a.raw.page.json: |
    { "conceptual": "<p>\n<a data-linktype=\"relative-path\" href=\"redirect\">link</a></p>" }
  redirect.mta.json:
  redirect.raw.page.json:
---
# Legacy metadata black list
inputs:
  docfx.yml: |
    fileMetadata:
      content_type:
        docs/a.md: json
    metadataSchema: schema.json
  docs/a.md: |
    ---
    ms.contentlang: 'C#'
    ---
  schema.json: |
    { "reserved": ["content_type", "ms.contentlang"] }
outputs:
  docs/a.json:
  .errors.log: |
    ["warning","attribute-reserved","Attribute content_type is reserved for use by Docs. Remove it from your file metadata.","docfx.yml",3,16]
    ["warning","attribute-reserved","Attribute ms.contentlang is reserved for use by Docs. Remove it from your file metadata.","docs/a.md",2,1]
---
# Support metadata at root level for landing data
commands:
  - build --legacy
inputs:
  docfx.yml:
  docs/a.yml: |
    #YamlMime:LandingData
    title: my title
    key1: value1
    metadata:
      key2: value2
outputs:
  docs/a.raw.page.json: |
    {"key1":"value1","key2":"value2"}
  docs/a.mta.json:
---
# Context object type is TOC
commands:
  - build --legacy
inputs:
  docfx.yml:
  docs/a.yml: |
    #YamlMime: ContextObject
outputs:
  docs/a.json:
  .manifest.json: |
    {"files":[{"asset_id":"/docs/a.json","original":"docs/a.yml","source_relative_path":"docs/a.yml","original_type":"Conceptual","type":"Toc"}]}
---
# Do not copy resource when the copyResources is false
commands:
  - build --legacy
inputs:
  docfx.yml: |
    files: a.png
    output:
      copyResources: false
  a.png:
outputs:
  .publish.json: |
    {"files":[{"url":"/a.png","path":"../a.png"}]}
  .manifest.json: |
    {"files":[{"asset_id":"/a.png","output":{"resource":{"is_raw_page":false,"relative_path":"a.png"}}}]}
---
# Build versioning repository
commands:
  - build --legacy
inputs:
  docfx.yml: |
    monikerRange:
      'docs/v1/**': '< netcore-2.0'
    baseUrl: https://docs.com/docs
    routes:
      docs/: .
      docs/v1/: .
      docs/v2/: .
    monikerDefinition: monikerDefinition.json
  docs/v1/a.md: |
  docs/a.md: |
    No version
  monikerDefinition.json: |
    {
      "monikers": [
        { "moniker_name": "netcore-1.0", "product_name": ".NET Core" },
        { "moniker_name": "netcore-1.1", "product_name": ".NET Core" },
        { "moniker_name": "netcore-2.0", "product_name": ".NET Core" },
      ]
    }
outputs:
  docs/a.mta.json:
  docs/a.raw.page.json:
  docs/9d4e15fd/a.mta.json:
  docs/9d4e15fd/a.raw.page.json:
  docs/.dependency-map.json:
  docs/.manifest.json: |
    {
      "files":[
        {"asset_id":"a","original":"docs/a.md","source_relative_path":"docs/a.md","output":{".mta.json":{"relative_path":"a.mta.json"},".raw.page.json":{"relative_path":"a.raw.page.json"}}},
        {"asset_id":"a","original":"docs/v1/a.md","source_relative_path":"docs/v1/a.md","output":{".mta.json":{"relative_path":"9d4e15fd/a.mta.json"},".raw.page.json":{"relative_path":"9d4e15fd/a.raw.page.json"}},"group":"9d4e15fd"}
      ],
      "groups":[{"group":"9d4e15fd","monikers":["netcore-1.0","netcore-1.1"]}]
    }
  docs/filemap.json: |
    {
      "file_mapping":{
        "docs/a.md":{"type":"Content","output_relative_path":"a.html","asset_id":"a"},
        "docs/v1/a.md:< netcore-2.0":{
          "type":"Content",
          "output_relative_path":"9d4e15fd/a.html",
          "asset_id":"a",
          "version": "< netcore-2.0",
          "is_moniker_range": true
        }
      }
    }
