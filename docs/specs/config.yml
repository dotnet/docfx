---
# Specify include files, prefer docfx.yml to docfx.json
inputs:
  docfx.yml: |
    files: docs/**/*.md
  docfx.json: |
    { "files": "ignore.md" }  
  ignore.md:
  docs/index.md:
outputs:
  docs/index.json:
---
# Content supports array form
inputs:
  docfx.yml: |
    files:
    - docs1/**/*.md
    - docs2/**/*.md
  ignore.md:
  docs1/index.md:
  docs2/index.md:
outputs:
  docs1/index.json:
  docs2/index.json:
---
# Content supports exclude file
inputs:
  docfx.yml: |
    files: docs/**/*.md
    exclude: docs/**/ignore.md
  docs/index.md:
outputs:
  docs/index.json:
---
# Content supports exclude folder
inputs:
  docfx.yml: |
    files: docs/**/*.md
    exclude:
      - docs/ignore/**/*.md
      - docs/codesnippet/**/*.md
  docs/index.md:
  docs/ignore/index.md:
  docs/codesnippet/index.md:
outputs:
  docs/index.json:
---
# Global metadata
inputs:
  docfx.yml: |
    globalMetadata:
      key: value
  docs/a.md:
  docs/b.md:
outputs:
  docs/a.json: |
    { "key": "value" }
  docs/b.json: |
    { "key": "value"}
---
# Global metadata multiple keys
inputs:
  docfx.yml: |
    globalMetadata:
      key1: value
      key2: 2
  docs/a.md:
  docs/b.md:
outputs:
  docs/a.json: |
    { "key1": "value", "key2": 2 }
  docs/b.json: |
    { "key1": "value", "key2": 2 }
---
# Global metadata schema violation
inputs:
  docfx.yml: |
    globalMetadata:
      title: 
        - 1
        - 2
  docs/a.md:
  docs/b.md:
outputs:
  build.log: |
    ["error","violate-schema","Expected type String, please input String or type compatible with String.","docfx.yml",3,5]
---
# File metadata of object form
inputs:
  docfx.yml: |
    fileMetadata:
      key:
        docs/**: value
        docs/index.md: another value
  docs/a.md:
  docs/b.md:
  docs/index.md:
outputs:
  docs/a.json: |
    { "key": "value" }
  docs/b.json: |
    { "key": "value" }
  docs/index.json: |
    { "key": "another value" }
---
# File metadata overwrite global metadata
inputs:
  docfx.yml: |
    globalMetadata:
      key: value
    fileMetadata:
      key:
        docs/**: another value
  docs/a.md:
outputs:
  docs/a.json: |
    { "key": "another value" }
---
# String values are trimmed in config
inputs:
  docfx.yml: |
    globalMetadata:
      key: ' value   '
    redirections:
      docs/redirect.md: '/absolute/path '
  docs/a.md: |
    [redirect](redirect.md?a#b)
outputs:
  docs/a.json: |
    {
      "key": "value",
      "content": "<p><a href=\"redirect?a#b\">redirect</a></p>"
    }
---
# routes
inputs:
  docfx.yml: |
    routes:
      /: outputB
      docs/a.md: output
      docs/b: output
  docs/a.md: |
    [link](c.png)
  docs/c.png:
  docs/b/b.md: |
    [link](d.svg)
  docs/b/d.svg:
  docs/g/a.md: |
    [link](e.jpg)
  docs/g/e.jpg:
outputs:
  output/a.json:
  output/b.json:
  output/d.svg:
  outputb/docs/c.png:
  outputb/docs/g/a.json:
  outputb/docs/g/e.jpg:
---
# latter routes rule takes precedence - 1
inputs:
  docfx.yml: |
    routes:
      docs/a/: output
      docs/a/b.md: outputB
      docs/a/c.gif: outputC
  docs/a/b.md: |
    [link](c.gif)
  docs/a/c.gif:
outputs:
  outputb/b.json:
  outputc/c.gif:
---
# latter routes rule takes precedence - 2
inputs:
  docfx.yml: |
    routes:
      docs/a/b.md: outputB
      docs/a/c.gif: outputC
      docs/a/: output
  docs/a/b.md: |
    [link](c.gif)
  docs/a/c.gif:
outputs:
  output/b.json:
  output/c.gif:
---
# relative path extend with json file
inputs:
  docfx.yml: |
    extend: _shared/extend.json
  _shared/extend.json: |
    {"files": "a.md"}
  a.md:
outputs:
  a.json:
---
# relative path extend to itself
inputs:
  docfx.yml: |
    extend: docfx.yml
    files: a.md
  a.md:
outputs:
  a.json:
---
# absolute url extend
inputs:
  docfx.yml: |
    extend: https://raw.githubusercontent.com/docascode/docfx-test-dependencies/62b0448/extend1.yml
  a.md:
outputs:
  a.json:
---
# current config takes precedence over extend config
inputs:
  docfx.yml: |
    files: a.md
    extend: extend.yml
  extend.yml: |
    files: invalid.md
  a.md:
outputs:
  a.json:
---
# latter extend config takes precedence over former extend config
inputs:
  docfx.yml: |
    extend:
    - extendB.yml
    - https://raw.githubusercontent.com/docascode/docfx-test-dependencies/62b0448/extend1.yml
  extendB.yml: |
    files: invalid.md
  a.md:
outputs:
  a.json:
---
# exclude config extend and external references from build
inputs:
  docfx.yml: |
    extend:
      - docs/a.yml
      - docs/b.yml
    gitHub:
      userCache: docs/d.json
  docs/a.yml:
  docs/b.yml:
  docs/d.json: '{}'
outputs:
---
# `/` and `\` in path will be normalized
inputs:
  docfx.yml: |
    routes:
      docs\a.md: output
      .\docs/b\: output
  docs/a.md:
  docs/b/b.md:
outputs:
  output/a.json:
  output/b.json:
---
# Adjust error level using rules
inputs:
  docfx.yml: |
    rules:
      file-not-found: off
  docs/a.md: |
    [b](b.md)
outputs:
  docs/a.json: |
    { "content": "<p><a href=\"b.md\">b</a></p>" }
---
# log with default log level when docfx crashes, even the corresponding rule is turned off
inputs:
  docfx.yml: |
    rules:
      file-not-found: off
    gitHub:
      userCache: user_profile.json
outputs:
  build.log: |
    ["error","file-not-found","Cannot find file 'user_profile.json' relative to '*'","*",4,14]
---
# Treat warnings as errors
inputs:
  docfx.yml: |
    warningsAsErrors: true
  docs/a.md: |
    [b](b.md)
outputs:
  build.log: |
    ["error","file-not-found","Cannot find file 'b.md' relative to 'docs/a.md'","docs/a.md",1,1]
---
# Invalid redirection file
inputs:
  docfx.yml: |
    redirections:
      docs/TOC.md: /absolute/path
outputs:
  build.log: |
    ["error","invalid-redirection","The 'docs/TOC.md' shouldn't belong to redirections since it's a TableOfContents","docfx.yml",2,16]
---
# Conflicted redirection file
inputs:
  docfx.yml: |
    redirections:
      docs/a.md: /absolute/path1
    redirectionsWithoutId:
      docs/a.md: /absolute/path2
outputs:
  build.log: |
    ["error","redirection-conflict","The 'docs/a.md' appears twice or more in the redirection mappings","docfx.yml"]
---
# Out of scope redirection file
inputs:
  docfx.yml: |
    exclude: '*'
    redirections:
      docs/a.md: /absolute/path1
      b.md: /absolute/path2
outputs:
  build.log: |
    ["info","redirection-out-of-scope","Redirection file 'b.md' will not be built because it is not included in build scope","docfx.yml",4,9]
---
# Out of scope file with conflicted id
inputs:
  docfx.yml: |
    exclude: '*'
    redirections:
      a.md: /absolute/path1
      b.md: /absolute/path1
outputs:
  build.log: |
    ["info","redirection-out-of-scope","Redirection file 'a.md' will not be built because it is not included in build scope","docfx.yml",3,9]
    ["info","redirection-out-of-scope","Redirection file 'b.md' will not be built because it is not included in build scope","docfx.yml",4,9]
---
# Multiple redirection errors
inputs:
  docfx.yml: |
    redirections:
      docs/TOC.md: /absolute/path
      docs/a.md: /absolute/path1
    redirectionsWithoutId:
      docs/a.md: /absolute/path2
outputs:
  build.log: |
    ["error","invalid-redirection","The 'docs/TOC.md' shouldn't belong to redirections since it's a TableOfContents","docfx.yml",2,16]
    ["error","redirection-conflict","The 'docs/a.md' appears twice or more in the redirection mappings","docfx.yml"]
---
# Wrong locale
os: windows
inputs:
  docfx.yml: |
    localization:
      defaultLocale: wrong/wrong
outputs:
  build.log: |
    ["error","invalid-locale","Locale 'wrong/wrong' is not supported."]
---
# branch overwrite config
repo: https://github.com/docascode/docfx-test-dependencies#master
inputs:
  docfx.yml: |
    files: a.md
    "branches: [master]":
      files: b.md
  a.md:
outputs:
---
# locale overwrite config
commands:
  - build --locale zh-cn
inputs:
  docfx.yml: |
    files: a.md
    "locales: [zh-cn,de-de]":
      files: b.md
      name: test
    localization:
      defaultLocale: "zh-cn"
  a.md:
outputs:
---
# branch | locale overwrite config
commands:
  - build --locale zh-cn
repo: https://github.com/docascode/docfx-test-dependencies#master
inputs:
  docfx.yml: |
    localization:
      defaultLocale: "zh-cn"
    files: a.md
    "locales: [zh-cn]":
      files:
        - b.md
        - c.md
    "branches: [master,live]":
      exclude:
        - b.md
  a.md:
  b.md:
  c.md:
outputs:
  c.json:
---
# branch & locale overwrite config
commands:
  - build --locale zh-cn
repo: https://github.com/docascode/docfx-test-dependencies#master
inputs:
  docfx.yml: |
    localization:
      defaultLocale: "zh-cn"
    files: a.md
    "locales: [zh-cn, de-de] branches: [live]":
      files: b.md
  a.md:
outputs:
  a.json:
---
# branch & locale overwrite with null
commands:
  - build --locale zh-cn
repo: https://github.com/docascode/docfx-test-dependencies#master
inputs:
  docfx.yml: |
    files:
      - a.md
      - b.png
    output:
      copyResources: false
    localization:
      defaultLocale: "zh-cn"
    "locales: [zh-cn]":
      output:
        copyResources:
  a.md:
  b.png:
outputs:
  a.json:
  b.png:
  build.log: |
    ["info","null-value","'copyResources' contains null value","docfx.yml",10,5]
---
# invalid overwrite config
commands:
  - build --locale zh-cn
inputs:
  docfx.yml: |
    localization:
      defaultLocale: "zh-cn"
    files: a.md
    "locales: zh-cn":
      files: b.md
  a.md:
outputs:
  a.json:
  build.log: |
    ["warning","unknown-field","Could not find member 'locales: zh-cn' on object of type 'Config'.","docfx.yml",4,1]
---
# redirect to in config.redirections must start with '/'
inputs:
  docfx.yml: |
    redirections:
      a.md: https://docs.microsoft.com/docfx/a
      b.md: a
outputs:
  build.log: |
    ["warning","invalid-redirect-to","The redirect url 'https://docs.microsoft.com/docfx/a' must start with '/'","docfx.yml",2,9]
    ["warning","invalid-redirect-to","The redirect url 'a' must start with '/'","docfx.yml",3,9]
---
# redirect to not starting with '/' is allowed in config.redirectionWithoutIds
inputs:
  docfx.yml: |
    redirectionsWithoutId:
      a.md: https://docs.microsoft.com/docfx/a
      b.md: a
outputs:
---
# file metadata schema violation
inputs:
  docfx.yml: |  
    fileMetadata:
      title:
        docs/**: 
          - 1
          - 2
  docs/a.md:
outputs:
  build.log: |
    ["error","violate-schema","Expected type String, please input String or type compatible with String.","docfx.yml",4,7]
