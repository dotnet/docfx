trigger:
  batch: true
  branches:
    include:
    - v3
    - v3-release
pr:
- v3
variables:
  dotnetVersion: 3.1.300
  runCodesignValidationInjection: false

jobs:

# Test and deploy on windows
- job: WindowsBuild
  pool:
    vmImage: 'windows-latest'
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET Core sdk $(dotnetVersion)'
    inputs:
      packageType: sdk
      version: $(dotnetVersion)

  - task: DotNetCoreCLI@2
    displayName: Run Tests
    inputs:
      command: test
      projects: test/Microsoft.DocAsCode.MarkdigEngine.Extensions.Tests
      configuration: Release
      arguments: --collect "XPlat Code Coverage"
      publishTestResults: true
    env:
      AZURE_DEVOPS_TOKEN: $(AZURE_DEVOPS_TOKEN)
      DOCS_GITHUB_TOKEN: $(DOCS_GITHUB_TOKEN)
      DOCS_OPS_TOKEN: $(DOCS_OPS_TOKEN)

  - bash: |
      bash <(curl -s https://codecov.io/bash) -f $(Agent.TempDirectory) -t $(CODECOV_TOKEN)
    displayName: 'Upload to codecov.io'

  # Build RegressionTest into Artifact 
  - powershell: |
      $regressionTestDir = './drop/RegressionTest'
      Remove-Item $regressionTestDir -Force -Recurse -ErrorAction Ignore
      dotnet build ./test/docfx.RegressionTest -c Release -r win7-x64 -o $regressionTestDir/bin
    displayName: Build RegressionTest into Artifact 

  # Publish RegressionTest binary
  - publish: ./drop/RegressionTest/bin
    displayName: Publish RegressionTest binary
    artifact: RegressionTest

  # Push to azure devops feed
  - task: NuGetCommand@2
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/v3'))
    displayName: Publish NuGet Packages
    inputs:
      command: push
      packagesToPush: drop/**/*.nupkg
      publishFeedCredentials: docs-public-packages
      nugetFeedType: external
      allowPackageConflicts: true

  # Publish binary packages to sandbox
  - task: AzureFileCopy@3
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/v3'))
    displayName: Publish Binary Packages To Sandbox
    inputs:
      azureSubscription: Open Publishing - Build Sandbox
      sourcePath: drop/docfx-bin/staging
      destination: AzureBlob
      storage: opbuildstoragesandbox
      containerName: docfx-bin

  # Publish binary packages to production
  - task: AzureFileCopy@3
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/v3-release'))
    displayName: Publish Binary Packages To Production
    inputs:
      azureSubscription: Open Publishing - Build Production
      sourcePath: drop/docfx-bin/staging
      destination: AzureBlob
      storage: opsbuildk8sprod
      containerName: docfx-bin

