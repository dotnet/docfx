{
  "api/BuildFromAssembly.Class1.html": {
    "href": "api/BuildFromAssembly.Class1.html",
    "title": "Class Class1 | docfx seed website",
    "keywords": "Class Class1 This is a test class. Inheritance object Class1 Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Namespace: BuildFromAssembly Assembly: BuildFromAssembly.dll Syntax public class Class1 Constructors Class1() Declaration public Class1() Methods HelloWorld() Declaration public static void HelloWorld()"
  },
  "api/BuildFromAssembly.html": {
    "href": "api/BuildFromAssembly.html",
    "title": "Namespace BuildFromAssembly | docfx seed website",
    "keywords": "Namespace BuildFromAssembly Classes Class1 This is a test class."
  },
  "api/BuildFromCSharpSourceCode.CSharp.html": {
    "href": "api/BuildFromCSharpSourceCode.CSharp.html",
    "title": "Class CSharp | docfx seed website",
    "keywords": "Class CSharp Inheritance object CSharp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: BuildFromCSharpSourceCode Assembly: cs.temp.dll.dll Syntax public class CSharp Methods | Improve this Doc View Source Main(string[]) Declaration public static void Main(string[] args) Parameters Type Name Description string[] args"
  },
  "api/BuildFromCSharpSourceCode.html": {
    "href": "api/BuildFromCSharpSourceCode.html",
    "title": "Namespace BuildFromCSharpSourceCode | docfx seed website",
    "keywords": "Namespace BuildFromCSharpSourceCode Classes CSharp"
  },
  "api/BuildFromProject.Class1.html": {
    "href": "api/BuildFromProject.Class1.html",
    "title": "Class Class1 | docfx seed website",
    "keywords": "Class Class1 Inheritance object Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: BuildFromProject Assembly: BuildFromProject.dll Syntax public class Class1 Methods | Improve this Doc View Source XmlCommentIncludeTag() This method should do something... Declaration public void XmlCommentIncludeTag() Remarks This is remarks."
  },
  "api/BuildFromProject.html": {
    "href": "api/BuildFromProject.html",
    "title": "Namespace BuildFromProject | docfx seed website",
    "keywords": "Namespace BuildFromProject Classes Class1"
  },
  "api/BuildFromVBSourceCode.BaseClass1.html": {
    "href": "api/BuildFromVBSourceCode.BaseClass1.html",
    "title": "Class BaseClass1 | docfx seed website",
    "keywords": "Class BaseClass1 This is the BaseClass Inheritance object BaseClass1 Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.Finalize() object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: BuildFromVBSourceCode Assembly: vb.temp.dll.dll Syntax public abstract class BaseClass1 Methods | Improve this Doc View Source WithDeclarationKeyword(Class1) Declaration public abstract DateTime WithDeclarationKeyword(Class1 keyword) Parameters Type Name Description Class1 keyword Returns Type Description DateTime"
  },
  "api/BuildFromVBSourceCode.Class1.html": {
    "href": "api/BuildFromVBSourceCode.Class1.html",
    "title": "Class Class1 | docfx seed website",
    "keywords": "Class Class1 This is summary from vb class... Inheritance object BaseClass1 Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.Finalize() object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: BuildFromVBSourceCode Assembly: vb.temp.dll.dll Syntax public class Class1 : BaseClass1 Fields | Improve this Doc View Source ValueClass This is a Value type Declaration public Class1 ValueClass Field Value Type Description Class1 Properties | Improve this Doc View Source Keyword Declaration [Obsolete(\"This member is obsolete.\", true)] public Class1 Keyword { get; } Property Value Type Description Class1 Methods | Improve this Doc View Source Value(string) This is a Function Declaration public int Value(string name) Parameters Type Name Description string name Name as the String value Returns Type Description int Returns Ahooo | Improve this Doc View Source WithDeclarationKeyword(Class1) What is Sub? Declaration public override DateTime WithDeclarationKeyword(Class1 keyword) Parameters Type Name Description Class1 keyword Returns Type Description DateTime Overrides BaseClass1.WithDeclarationKeyword(Class1)"
  },
  "api/BuildFromVBSourceCode.html": {
    "href": "api/BuildFromVBSourceCode.html",
    "title": "Namespace BuildFromVBSourceCode | docfx seed website",
    "keywords": "Namespace BuildFromVBSourceCode Classes BaseClass1 This is the BaseClass Class1 This is summary from vb class..."
  },
  "api/CatLibrary.Cat-2.html": {
    "href": "api/CatLibrary.Cat-2.html",
    "title": "Class Cat<T, K> | docfx seed website",
    "keywords": "Class Cat<T, K> Here's main class of this Demo. You can see mostly type of article within this class and you for more detail, please see the remarks. this class is a template class. It has two Generic parameter. they are: T and K. The extension method of this class can refer to ICatExtension class This is a class talking about CAT. NOTE This is a CAT class Refer to IAnimal to see other animals. Inheritance object Cat<T, K> Implements ICat IAnimal Inherited Members object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary Assembly: CatLibrary.dll Syntax [Serializable] public class Cat<T, K> : ICat, IAnimal where T : class, new() where K : struct Type Parameters Name Description T This type should be class and can new instance. K This type is a struct type, class type can't be used for this parameter. Remarks THIS is remarks overridden in MARKDWON file Examples Here's example of how to create an instance of this class. As T is limited with class and K is limited with struct. var a = new Cat(object, int)(); int catNumber = new int(); unsafe { a.GetFeetLength(catNumber); } As you see, here we bring in pointer so we need to add unsafe keyword. Constructors | Improve this Doc View Source Cat() Default constructor. Declaration public Cat() Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Cat(T) Constructor with one generic parameter. Declaration public Cat(T ownType) Parameters Type Name Description T ownType This parameter type defined by class. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Cat(string, out int, string, bool) It's a complex constructor. The parameter will have some attributes. Declaration public Cat(string nickName, out int age, string realName, bool isHealthy) Parameters Type Name Description string nickName it's string type. int age It's an out and ref parameter. string realName It's an out paramter. bool isHealthy It's an in parameter. Remarks THIS is remarks overridden in MARKDWON file Fields | Improve this Doc View Source isHealthy Field with attribute. Declaration [ContextStatic] [NonSerialized] public bool isHealthy Field Value Type Description bool Remarks THIS is remarks overridden in MARKDWON file Properties | Improve this Doc View Source Age Hint cat's age. Declaration protected int Age { get; set; } Property Value Type Description int Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source this[string] This is index property of Cat. You can see that the visibility is different between get and set method. Declaration public int this[string a] { protected get; set; } Parameters Type Name Description string a Cat's name. Property Value Type Description int Cat's number. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Name EII property. Declaration public string Name { get; } Property Value Type Description string Remarks THIS is remarks overridden in MARKDWON file Methods | Improve this Doc View Source Override CalculateFood Name It's an overridden summary in markdown format This is overriding methods. You can override parameter descriptions for methods, you can even add exceptions to methods. Check the intermediate obj folder to see the data model of the generated method/class. Override Yaml header should follow the data structure. Declaration public Dictionary<string, List<int>> CalculateFood(DateTime date) Parameters Type Name Description DateTime date This is overridden description for a parameter. id must be specified. Returns Type Description Dictionary<string, List<int>> It's overridden description for return. type must be specified. Remarks THIS is remarks overridden in MARKDWON file Exceptions Type Condition ArgumentException This is an overridden argument exception. you can add additional exception by adding different exception type. | Improve this Doc View Source Equals(object) Override the method of Object.Equals(object obj). Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Can pass any class type. Returns Type Description bool The return value tell you whehter the compare operation is successful. Overrides Object.Equals(Object) Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source GetTailLength(int*, params object[]) It's an unsafe method. As you see, catName is a pointer, so we need to add unsafe keyword. Declaration public long GetTailLength(int* catName, params object[] parameters) Parameters Type Name Description int* catName Thie represent for cat name length. object[] parameters Optional parameters. Returns Type Description long Return cat tail's length. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Jump(T, K, ref bool) This method have attribute above it. Declaration [Conditional(\"Debug\")] public void Jump(T ownType, K anotherOwnType, ref bool cheat) Parameters Type Name Description T ownType Type come from class define. K anotherOwnType Type come from class define. bool cheat Hint whether this cat has cheat mode. Remarks THIS is remarks overridden in MARKDWON file Exceptions Type Condition ArgumentException This is an argument exception Events | Improve this Doc View Source ownEat Eat event of this cat Declaration public event EventHandler ownEat Event Type Type Description EventHandler Remarks THIS is remarks overridden in MARKDWON file Operators | Improve this Doc View Source operator +(Cat<T, K>, int) Addition operator of this class. Declaration public static int operator +(Cat<T, K> lsr, int rsr) Parameters Type Name Description Cat<T, K> lsr ... int rsr Returns Type Description int Result with int type. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source explicit operator Tom(Cat<T, K>) Expilicit operator of this class. It means this cat can evolve to change to Tom. Tom and Jerry. Declaration public static explicit operator Tom(Cat<T, K> src) Parameters Type Name Description Cat<T, K> src Instance of this class. Returns Type Description Tom Advanced class type of cat. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source operator -(Cat<T, K>, int) Similar with operaotr +, refer to that topic. Declaration public static int operator -(Cat<T, K> lsr, int rsr) Parameters Type Name Description Cat<T, K> lsr int rsr Returns Type Description int Remarks THIS is remarks overridden in MARKDWON file Explicit Interface Implementations | Improve this Doc View Source IAnimal.Eat() EII method. Declaration void IAnimal.Eat() Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source IAnimal.Eat(string) Implementation of Eat(food) Declaration void IAnimal.Eat(string food) Parameters Type Name Description string food Food to eat Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source IAnimal.Eat<Tool>(Tool) EII template method. Declaration void IAnimal.Eat<Tool>(Tool a) where Tool : class Parameters Type Name Description Tool a Tool name. Type Parameters Name Description Tool Tool for eat. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source IAnimal.this[int] EII index. Declaration string IAnimal.this[int a] { get; } Parameters Type Name Description int a Cat's number. Returns Type Description string Cat's name. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source ICat.eat EII event. Declaration event EventHandler ICat.eat Returns Type Description EventHandler Remarks THIS is remarks overridden in MARKDWON file Implements ICat IAnimal Extension Methods ICatExtension.Play(ICat, ContainersRefType.ColorType) ICatExtension.Sleep(ICat, long)"
  },
  "api/CatLibrary.CatException-1.html": {
    "href": "api/CatLibrary.CatException-1.html",
    "title": "Class CatException<T> | docfx seed website",
    "keywords": "Class CatException<T> Inheritance object Exception CatException<T> Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public class CatException<T> : Exception, ISerializable Type Parameters Name Description T Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CatLibrary.Complex-2.html": {
    "href": "api/CatLibrary.Complex-2.html",
    "title": "Class Complex<T, J> | docfx seed website",
    "keywords": "Class Complex<T, J> Inheritance object Complex<T, J> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public class Complex<T, J> Type Parameters Name Description T J"
  },
  "api/CatLibrary.Core.ContainersRefType.ColorType.html": {
    "href": "api/CatLibrary.Core.ContainersRefType.ColorType.html",
    "title": "Enum ContainersRefType.ColorType | docfx seed website",
    "keywords": "Enum ContainersRefType.ColorType Enumeration ColorType Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public enum ContainersRefType.ColorType Fields Name Description Blue blue Red red Yellow yellow"
  },
  "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeChild.html": {
    "href": "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeChild.html",
    "title": "Class ContainersRefType.ContainersRefTypeChild | docfx seed website",
    "keywords": "Class ContainersRefType.ContainersRefTypeChild Inheritance object ContainersRefType.ContainersRefTypeChild Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public class ContainersRefType.ContainersRefTypeChild"
  },
  "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeChildInterface.html": {
    "href": "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeChildInterface.html",
    "title": "Interface ContainersRefType.ContainersRefTypeChildInterface | docfx seed website",
    "keywords": "Interface ContainersRefType.ContainersRefTypeChildInterface Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public interface ContainersRefType.ContainersRefTypeChildInterface"
  },
  "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeDelegate.html": {
    "href": "api/CatLibrary.Core.ContainersRefType.ContainersRefTypeDelegate.html",
    "title": "Delegate ContainersRefType.ContainersRefTypeDelegate | docfx seed website",
    "keywords": "Delegate ContainersRefType.ContainersRefTypeDelegate Delegate ContainersRefTypeDelegate Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public delegate void ContainersRefType.ContainersRefTypeDelegate()"
  },
  "api/CatLibrary.Core.ContainersRefType.html": {
    "href": "api/CatLibrary.Core.ContainersRefType.html",
    "title": "Struct ContainersRefType | docfx seed website",
    "keywords": "Struct ContainersRefType Struct ContainersRefType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public struct ContainersRefType Fields | Improve this Doc View Source ColorCount ColorCount Declaration public long ColorCount Field Value Type Description long Properties | Improve this Doc View Source GetColorCount GetColorCount Declaration public long GetColorCount { get; } Property Value Type Description long Methods | Improve this Doc View Source ContainersRefTypeNonRefMethod(params object[]) ContainersRefTypeNonRefMethod array Declaration public static int ContainersRefTypeNonRefMethod(params object[] parmsArray) Parameters Type Name Description object[] parmsArray Returns Type Description int Events | Improve this Doc View Source ContainersRefTypeEventHandler Declaration public event EventHandler ContainersRefTypeEventHandler Event Type Type Description EventHandler"
  },
  "api/CatLibrary.Core.ExplicitLayoutClass.html": {
    "href": "api/CatLibrary.Core.ExplicitLayoutClass.html",
    "title": "Class ExplicitLayoutClass | docfx seed website",
    "keywords": "Class ExplicitLayoutClass Inheritance object ExplicitLayoutClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary.Core Assembly: CatLibrary.Core.dll Syntax public class ExplicitLayoutClass"
  },
  "api/CatLibrary.Core.html": {
    "href": "api/CatLibrary.Core.html",
    "title": "Namespace CatLibrary.Core | docfx seed website",
    "keywords": "Namespace CatLibrary.Core Classes ContainersRefType.ContainersRefTypeChild ExplicitLayoutClass Structs ContainersRefType Struct ContainersRefType Interfaces ContainersRefType.ContainersRefTypeChildInterface Enums ContainersRefType.ColorType Enumeration ColorType Delegates ContainersRefType.ContainersRefTypeDelegate Delegate ContainersRefTypeDelegate"
  },
  "api/CatLibrary.FakeDelegate-1.html": {
    "href": "api/CatLibrary.FakeDelegate-1.html",
    "title": "Delegate FakeDelegate<T> | docfx seed website",
    "keywords": "Delegate FakeDelegate<T> Fake delegate Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public delegate int FakeDelegate<T>(long num, string name, params object[] scores) Parameters Type Name Description long num Fake para string name Fake para object[] scores Optional Parameter. Returns Type Description int Return a fake number to confuse you. Type Parameters Name Description T Fake para"
  },
  "api/CatLibrary.html": {
    "href": "api/CatLibrary.html",
    "title": "Namespace CatLibrary | docfx seed website",
    "keywords": "Namespace CatLibrary Classes Cat<T, K> Here's main class of this Demo. You can see mostly type of article within this class and you for more detail, please see the remarks. this class is a template class. It has two Generic parameter. they are: T and K. The extension method of this class can refer to ICatExtension class CatException<T> Complex<T, J> ICatExtension It's the class that contains ICat interface's extension method. This class must be public and static. Also it shouldn't be a geneic class Tom Tom class is only inherit from Object. Not any member inside itself. TomFromBaseClass TomFromBaseClass inherits from @ Interfaces IAnimal This is basic interface of all animal. ICat Cat's interface Delegates FakeDelegate<T> Fake delegate MRefDelegate<K, T, L> Generic delegate with many constrains. MRefNormalDelegate Delegate in the namespace"
  },
  "api/CatLibrary.IAnimal.html": {
    "href": "api/CatLibrary.IAnimal.html",
    "title": "Interface IAnimal | docfx seed website",
    "keywords": "Interface IAnimal This is basic interface of all animal. Welcome to the Animal world! Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public interface IAnimal Remarks THIS is remarks overridden in MARKDWON file Properties | Improve this Doc View Source this[int] Return specific number animal's name. Declaration string this[int index] { get; } Parameters Type Name Description int index Animal number. Property Value Type Description string Animal name. Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Name Name of Animal. Declaration string Name { get; } Property Value Type Description string Remarks THIS is remarks overridden in MARKDWON file Methods | Improve this Doc View Source Eat() Animal's eat method. Declaration void Eat() Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Eat(string) Feed the animal with some food Declaration void Eat(string food) Parameters Type Name Description string food Food to eat Remarks THIS is remarks overridden in MARKDWON file | Improve this Doc View Source Eat<Tool>(Tool) Overload method of eat. This define the animal eat by which tool. Declaration void Eat<Tool>(Tool tool) where Tool : class Parameters Type Name Description Tool tool Tool name. Type Parameters Name Description Tool It's a class type. Remarks THIS is remarks overridden in MARKDWON file"
  },
  "api/CatLibrary.ICat.html": {
    "href": "api/CatLibrary.ICat.html",
    "title": "Interface ICat | docfx seed website",
    "keywords": "Interface ICat Cat's interface Inherited Members IAnimal.Name IAnimal.this[int] IAnimal.Eat() IAnimal.Eat<Tool>(Tool) IAnimal.Eat(string) Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public interface ICat : IAnimal Events | Improve this Doc View Source eat eat event of cat. Every cat must implement this event. Declaration event EventHandler eat Event Type Type Description EventHandler Extension Methods ICatExtension.Play(ICat, ContainersRefType.ColorType) ICatExtension.Sleep(ICat, long)"
  },
  "api/CatLibrary.ICatExtension.html": {
    "href": "api/CatLibrary.ICatExtension.html",
    "title": "Class ICatExtension | docfx seed website",
    "keywords": "Class ICatExtension It's the class that contains ICat interface's extension method. This class must be public and static. Also it shouldn't be a geneic class Inheritance object ICatExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public static class ICatExtension Methods | Improve this Doc View Source Play(ICat, ColorType) Extension method to let cat play Declaration public static void Play(this ICat icat, ContainersRefType.ColorType toy) Parameters Type Name Description ICat icat Cat ContainersRefType.ColorType toy Something to play | Improve this Doc View Source Sleep(ICat, long) Extension method hint that how long the cat can sleep. Declaration public static void Sleep(this ICat icat, long hours) Parameters Type Name Description ICat icat The type will be extended. long hours The length of sleep."
  },
  "api/CatLibrary.MRefDelegate-3.html": {
    "href": "api/CatLibrary.MRefDelegate-3.html",
    "title": "Delegate MRefDelegate<K, T, L> | docfx seed website",
    "keywords": "Delegate MRefDelegate<K, T, L> Generic delegate with many constrains. Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public delegate void MRefDelegate<K, T, L>(K k, T t, L l) where K : class, IComparable where T : struct where L : Tom, IEnumerable<long> Parameters Type Name Description K k Type K. T t Type T. L l Type L. Type Parameters Name Description K Generic K. T Generic T. L Generic L."
  },
  "api/CatLibrary.MRefNormalDelegate.html": {
    "href": "api/CatLibrary.MRefNormalDelegate.html",
    "title": "Delegate MRefNormalDelegate | docfx seed website",
    "keywords": "Delegate MRefNormalDelegate Delegate in the namespace Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public delegate void MRefNormalDelegate(List<string> pics, out string name) Parameters Type Name Description List<string> pics a name list of pictures. string name give out the needed name."
  },
  "api/CatLibrary.Tom.html": {
    "href": "api/CatLibrary.Tom.html",
    "title": "Class Tom | docfx seed website",
    "keywords": "Class Tom Tom class is only inherit from Object. Not any member inside itself. Inheritance object Tom TomFromBaseClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public class Tom Methods | Improve this Doc View Source TomMethod(Complex<TomFromBaseClass, TomFromBaseClass>, Tuple<string, Tom>) This is a Tom Method with complex type as return Declaration public Complex<string, TomFromBaseClass> TomMethod(Complex<TomFromBaseClass, TomFromBaseClass> a, Tuple<string, Tom> b) Parameters Type Name Description Complex<TomFromBaseClass, TomFromBaseClass> a A complex input Tuple<string, Tom> b Another complex input Returns Type Description Complex<string, TomFromBaseClass> Complex TomFromBaseClass Exceptions Type Condition NotImplementedException This is not implemented ArgumentException This is the exception to be thrown when implemented CatException<T> This is the exception in current documentation"
  },
  "api/CatLibrary.TomFromBaseClass.html": {
    "href": "api/CatLibrary.TomFromBaseClass.html",
    "title": "Class TomFromBaseClass | docfx seed website",
    "keywords": "Class TomFromBaseClass TomFromBaseClass inherits from @ Inheritance object Tom TomFromBaseClass Inherited Members Tom.TomMethod(Complex<TomFromBaseClass, TomFromBaseClass>, Tuple<string, Tom>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: CatLibrary Assembly: CatLibrary.dll Syntax public class TomFromBaseClass : Tom Constructors | Improve this Doc View Source TomFromBaseClass(int) This is a #ctor with parameter Declaration public TomFromBaseClass(int k) Parameters Type Name Description int k"
  },
  "api/MRef.Demo.Enumeration.ColorType.html": {
    "href": "api/MRef.Demo.Enumeration.ColorType.html",
    "title": "Enum ColorType | docfx seed website",
    "keywords": "Enum ColorType Enumeration ColorType Namespace: MRef.Demo.Enumeration Assembly: CatLibrary.dll Syntax public enum ColorType Remarks Red/Blue/Yellow can become all color you want. Fields Name Description Blue blue like river Red this color is red Yellow yellow comes from desert See Also object"
  },
  "api/MRef.Demo.Enumeration.html": {
    "href": "api/MRef.Demo.Enumeration.html",
    "title": "Namespace MRef.Demo.Enumeration | docfx seed website",
    "keywords": "Namespace MRef.Demo.Enumeration Enums ColorType Enumeration ColorType"
  },
  "articles/csharp_coding_standards.html": {
    "href": "articles/csharp_coding_standards.html",
    "title": "C# Coding Standards | docfx seed website",
    "keywords": "C# Coding Standards Introduction The coding standard will be used in conjunction with customized version of StyleCop and FxCop [TODO] during both development and build process. This will help ensure that the standard is followed by all developers on the team in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose The aim of this section is to define a set of C# coding standards to be used by CAPS build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended. Mandatory sections, will be enforced during code reviews as well as tools like StyleCop and FxCop, and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards which can be applied to any type of application developed in C#, based on Framework Design Guidelines. It does not pretend to be a tutorial on C#. It only includes a set of limitations and recommendations focused on clarifying the development. Tools Resharper is a great 3rd party code cleanup and style tool. StyleCop analyzes C# srouce code to enforce a set of style and consistency rules and has been integrated into many 3rd party development tools such as Resharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. C# Stylizer does many of the style rules automatically Highlights of Coding Standards This section is not intended to give a summary of all the coding standards that enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some recommended however not mandatory(which means not enabled in StyleCop) coding standards. File Layout (Recommended) Only one public class is allowed per file. The file name is derived from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Nested types, e.g. classes, enum, struct, etc. Field members, e.g. member variables, const, etc. Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables, Static) Private nested types Naming (Mandatory) DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream NOTE: A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields private readonly Guid _userId = Guid.NewGuid(); DO start static readonly fields, constants with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words. DO have \"Async\" explicitly in the Async method name to notice people how to use it properly Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > TOOLS > Options > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Cross-platform coding Our code should supports multiple operating systems. Don't assume we only run (and develop) on Windows. Code should be sensitvie to the differences between OS's. Here are some specifics to consider. DO use Enviroment.NewLine instead of hard-coding the line break instead of \\r\\n, as Windows uses \\r\\n and OSX/Linux uses \\n. Note Be aware that thes line-endings may cause problems in code when using @\"\" text blocks with line breaks. DO Use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash /. Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assmebly live in the Microsoft.Foo.FunctionalTests assmebly. In general there should be exactly one unit test assebmly for each product runtime assembly. In general there should be one functional test assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.Boo class in the test assembly. Unit test method naming Unit test method names must be descriptive about what is being tested, under what conditions, and what the expectations are. Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages, optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement is nothing more than a call to the one method that you are trying to test. keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recomended because way too many things can go wrong in this one statement. All the GetComplexParamN() calls can throw for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occured. The ideal pattern is to move the complex parameter building into the `Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself blew up. Testing exception messages In general testing the specific exception message in a unit test is important. This ensures that the exact desired exception is what is being tested rather than a different exception of the same type. In order to verify the exact exception it is important to verify the message. var ex = Assert.Throws<InvalidOperationException>( () => fruitBasket.GetBananaById(1234)); Assert.Equal( \"1234\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This will make the tests a lot more readable and also allow the test runner report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If the tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel tests! For functional tests it is reasonable to disable parallel tests."
  },
  "articles/docfx_getting_started.html": {
    "href": "articles/docfx_getting_started.html",
    "title": "Getting Started with docfx | docfx seed website",
    "keywords": "Getting Started with docfx Getting Started This is a seed. docfx is an API documentation generator for .NET, currently support C# and VB. It has the ability to extract triple slash comments out from your source code. What's more, it has syntax to link additional files to API to add additional remarks. docfx will scan your source code and your additional conceptual files and generate a complete HTML documentation website for you. docfx provides the flexibility for you to customize the website through templates. We currently have several embedded templates, including websites containing pure static html pages and also website managed by AngularJS. Click \"View Source\" for an API to route to the source code in GitHub (your API must be pushed to GitHub) docfx provide DNX version for cross platform use. docfx can be used within Visual Studio seamlessly. NOTE offical docfx.msbuild nuget package is now in pre-release version. You can also build your own with source code and use it locally. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion, cross reference, and yaml header."
  },
  "articles/engineering_guidelines.html": {
    "href": "articles/engineering_guidelines.html",
    "title": "Engineering Guidelines | docfx seed website",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl, .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (i.e. NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies require additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important. The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the Owner of that code. To commit the PR to the repo do not use the Big Green Button. Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0, 1.1.0) dev has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd. hotfix has the code for fixing master bug after it is released. hotfix changes will be merged back to master and dev once it is verified. Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln. Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. Solution need to contain solution folders that match the physical folder (src, test, tools, etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea>. Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "index.html": {
    "href": "index.html",
    "title": "docfx-seed | docfx seed website",
    "keywords": "docfx-seed Description This is a sample docfx documentation project. It contains .NET source code and markdown files. docfx.json is the configuration file for running docfx. docfx will generate a static website as similar to http://docascode.github.io/docfx-seed. How to run Under Windows Download and unzip docfx.zip to run docfx.exe directly! Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site. Cross platform and use dnx As a prerequisite, you will need to install DNVM and DNX. ###Quick Start dnvm upgrade to get the latest dnvm. Add feed https://www.myget.org/F/aspnetrelease/api/v2/ to Nuget.config For Windows, the nuget config file is %AppData%\\NuGet\\NuGet.config. For Linux/OSX, the nuget config file is ~/.config/NuGet/NuGet.config. dnu commands install docfx to install docfx as a command Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site. Further information about docfx docfx is a tool to generate documentation towards .NET source code and markdown files. Please refer to docfx to get start. The docfx website itself is generated by docfx!"
  },
  "restapi/contacts.html": {
    "href": "restapi/contacts.html",
    "title": "Contacts | docfx seed website",
    "keywords": "Contacts | Improve this Doc View Source get contacts You can get a collection of contacts from your tenant. Required scope: Contacts.Read or Contacts.Write Request GET /contacts?api-version Parameters Name Type Value Notes *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The results are returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact\", \"value\": [ { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"35110b16-360c-4c4a-93b2-03f065fabd93\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Yossi Ran\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Yossi\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Yossi@contoso.com\", \"mailNickname\": \"YossiRan\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Yossi@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Ran\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"7163f3b8-70c9-43d2-b9e1-4467ddaf087a\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Jeremy Nelson\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Jeremy\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Jeremy@contoso.com\", \"mailNickname\": \"JeremyNelson\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Jeremy@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Nelson\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"83234b5c-3a10-4108-8f36-39b1addadfdb\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"David Strome\", \"facsimileTelephoneNumber\": null, \"givenName\": \"David\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"David@contoso.com\", \"mailNickname\": \"DavidStrome\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:David@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Strome\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"8c1315ce-bf6f-4e26-b24f-c830606ef41c\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Holly Holt\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Holly\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Holly@contoso.com\", \"mailNickname\": \"HollyHolt\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Holly@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Holt\", \"telephoneNumber\": null } ] } | Improve this Doc View Source get contact by id Get a contact by using the object ID. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The contact is returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/graphdir1.onmicrosoft.com/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact/@Element\", \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null } | Improve this Doc View Source update contact Change a contact's properties. Required scope: Contacts.Write Request PATCH /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. bodyparam this is request body, not real parameter Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact Delete a contact. Required scope: Contacts.Write Request DELETE /contacts/{object_id}[?api-version] Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. | Improve this Doc View Source get contact manager link Get a link to the contact's manager. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. A link to the contact's manager is returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/manager\", \"url\": \"https://graph.windows.net/myorganization/directoryObjects/35110b16-360c-4c4a-93b2-03f065fabd93/Microsoft.WindowsAzure.ActiveDirectory.Contact\" } 404 Not Found. The requested resource was not found. This can occur if the manager property is not currently set for the specified contact. It can also have other causes, for example, a bad domain. A code and associated message is returned with the error. Mime type: application/json { \"odata.error\": { \"code\": \"Request_ResourceNotFound\", \"message\": { \"lang\": \"en\", \"value\": \"Resource not found for the segment 'manager'.\" } } } | Improve this Doc View Source update contact manager Update the contact's manager Required scope: Contacts.Write Request PUT /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. *bodyparam The request body contains a single property that specifies the URL of the user or contact to add as manager. Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact manager by id Delete the contact's manager. Required scope: Contacts.Write Request DELETE /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. N response body is returned. | Improve this Doc View Source get contact direct reports links Get a links to the contact's direct reports. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/directReports?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more direct reports are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/directReports\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/8c1315ce-bf6f-4e26-b24f-c830606ef41c/Microsoft.DirectoryServices.Contact\" } ] } | Improve this Doc View Source get contact memberOf links Get a links to the contact's direct group and directory role memberships. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/memberOf?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more groups and/or directory roles are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/memberOf\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/12345678-b942-47c9-a10e-a4bee353ce60/Microsoft.DirectoryServices.Group\" } ] }"
  },
  "restapi/petstore.html": {
    "href": "restapi/petstore.html",
    "title": "Pet Store APIs | docfx seed website",
    "keywords": "Swagger Petstore Describe APIs in Pet Store pet Description for pet tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source updatePet Update an existing pet Request PUT /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found 405 Validation exception | Improve this Doc View Source findPetsByStatus Finds Pets by status Multiple status values can be provided with comma separated strings Request GET /pet/findByStatus?status Parameters Name Type Value Notes *status array Status values that need to be considered for filter Responses Status Code Description Samples 200 successful operation 400 Invalid status value | Improve this Doc View Source findPetsByTags Finds Pets by tags Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing. Request GET /pet/findByTags?tags Parameters Name Type Value Notes *tags array Tags to filter by Responses Status Code Description Samples 200 successful operation 400 Invalid tag value | Improve this Doc View Source deletePet Deletes a pet Request DELETE /pet/{petId} Parameters Name Type Value Notes api_key string *petId integer Pet id to delete Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source getPetById Find pet by ID Returns a single pet Request GET /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet to return Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source updatePetWithForm Updates a pet in the store with form data Request POST /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet that needs to be updated name string Updated name of the pet status string Updated status of the pet Responses Status Code Description Samples 405 Invalid input | Improve this Doc View Source uploadFile uploads an image Request POST /pet/{petId}/uploadImage Parameters Name Type Value Notes *petId integer ID of pet to update additionalMetadata string Additional data to pass to server file file file to upload Responses Status Code Description Samples 200 successful operation store Access to Petstore orders Additional description for store tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source getInventory Returns pet inventories by status Returns a map of status codes to quantities Request GET /store/inventory Responses Status Code Description Samples 200 successful operation | Improve this Doc View Source placeOrder Place an order for a pet Request POST /store/order Parameters Name Type Value Notes *body order placed for purchasing the pet Responses Status Code Description Samples 200 successful operation 400 Invalid Order | Improve this Doc View Source deleteOrder Delete purchase order by ID For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors Request DELETE /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of the order that needs to be deleted Responses Status Code Description Samples 400 Invalid ID supplied 404 Order not found | Improve this Doc View Source getOrderById Find purchase order by ID For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions Request GET /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of pet that needs to be fetched Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Order not found user Operations about user | Improve this Doc View Source createUser Create user This can only be done by the logged in user. Request POST /user Parameters Name Type Value Notes *body Created user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source createUsersWithArrayInput Creates list of users with given input array Request POST /user/createWithArray Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source createUsersWithListInput Creates list of users with given input array Request POST /user/createWithList Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation | Improve this Doc View Source loginUser Logs user into the system Request GET /user/login?username&password Parameters Name Type Value Notes *username string The user name for login *password string The password for login in clear text Responses Status Code Description Samples 200 successful operation 400 Invalid username/password supplied | Improve this Doc View Source logoutUser Logs out current logged in user session Request GET /user/logout Responses Status Code Description Samples default successful operation | Improve this Doc View Source deleteUser Delete user This can only be done by the logged in user. Request DELETE /user/{username} Parameters Name Type Value Notes *username string The name that needs to be deleted Responses Status Code Description Samples 400 Invalid username supplied 404 User not found | Improve this Doc View Source getUserByName Get user by user name Request GET /user/{username} Parameters Name Type Value Notes *username string The name that needs to be fetched. Use user1 for testing. Responses Status Code Description Samples 200 successful operation 400 Invalid username supplied 404 User not found Other APIs | Improve this Doc View Source updateUser Updated user This can only be done by the logged in user. Request PUT /user/{username} Parameters Name Type Value Notes *username string name that need to be updated *body Updated user object Responses Status Code Description Samples 400 Invalid user supplied 404 User not found See Alsos See other REST APIs: Contacts API"
  }
}