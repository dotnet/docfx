{
  "conceptual": "\n<h2 id=\"basics\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"5\">Basics</h2>\n<h3 id=\"copyright-header-and-license-notice\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"7\">Copyright header and license notice</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"8\">All source code files require the following exact header according to its language (please do not make any changes to it).</p>\n<blockquote sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"10\">\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"10\">extension: <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"10\">.cs</strong></p>\n</blockquote>\n<pre><code class=\"lang-csharp\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"12\">// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n</code></pre>\n<blockquote sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"17\">\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"17\">extension: <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"17\">.js</strong></p>\n</blockquote>\n<pre><code class=\"lang-js\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"19\">// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n</code></pre>\n<blockquote sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"24\">\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"24\">extension: <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"24\">.css</strong></p>\n</blockquote>\n<pre><code class=\"lang-css\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"26\">/**\n * Licensed to the .NET Foundation under one or more agreements.\n * The .NET Foundation licenses this file to you under the MIT license.\n */\n</code></pre>\n<blockquote sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"33\">\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"33\">extension: <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"33\">.tmpl</strong>, <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"33\">.tmpl.partial</strong></p>\n</blockquote>\n<pre><code class=\"lang-mustache\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"35\">{{!Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license.}}\n</code></pre>\n<h3 id=\"external-dependencies\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"39\">External dependencies</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"40\">This refers to dependencies on projects (i.e. NuGet packages) outside of the <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"40\">docfx</code> repo, and especially outside of Microsoft. Adding new dependencies require additional approval.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"42\">Current approved dependencies are:</p>\n<ul sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"43\">\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"43\">Newtonsoft.Json</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"44\">Jint</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"45\">HtmlAgilityPack</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"46\">Nustache</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"47\">YamlDotNet</li>\n</ul>\n<h3 id=\"code-reviews-and-checkins\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"49\">Code reviews and checkins</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"50\">To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"52\">The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"54\">In general a PR should be signed off(using the \uD83D\uDC4D emoticon) by the Owner of that code.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"56\">To commit the PR to the repo <strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"56\">do not use the Big Green Button</strong>. Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push).</p>\n<h2 id=\"source-code-management\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"59\">Source Code Management</h2>\n<h3 id=\"branch-strategy\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"61\">Branch strategy</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"62\">In general:</p>\n<ul sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"64\">\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"64\"><code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"64\">master</code> has the code for the latest release on NuGet.org. (e.g. <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"64\">1.0.0</code>, <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"64\">1.1.0</code>)</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"65\"><code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"65\">dev</code> has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"65\">dev</code> branch and generate pre-release nuget package, e.g. <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"65\">1.0.1-alpha-9-abcdefsd</code>.</li>\n<li sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\"><code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\">hotfix</code> has the code for fixing <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\">master</code> bug after it is released. <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\">hotfix</code> changes will be merged back to <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\">master</code> and <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"66\">dev</code> once it is verified.</li>\n</ul>\n<h3 id=\"solution-and-project-folder-structure-and-naming\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"68\">Solution and project folder structure and naming</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"69\">Solution files go in the repo root. The default entry point is <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"69\">All.sln</code>.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"71\">Every project also needs a <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"71\">project.json</code> and a matching <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"71\">.xproj</code> file. This <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"71\">project.json</code> is the source of truth for a project's dependencies and configuration options.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"73\">Solution need to contain solution folders that match the physical folder (<code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"73\">src</code>, <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"73\">test</code>, <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"73\">tools</code>, etc.).</p>\n<h3 id=\"assembly-naming-pattern\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"75\">Assembly naming pattern</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"76\">The general naming pattern is <code sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"76\">Docfx.&lt;area&gt;.&lt;subarea&gt;</code>.</p>\n<h3 id=\"unit-tests\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"78\">Unit tests</h3>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"79\">We use <em sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"79\">xUnit.net</em> for all unit testing.</p>\n<h2 id=\"coding-standards\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"82\">Coding Standards</h2>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"83\">Please refer to <a href=\"~/articles/csharp_coding_standards.md\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"83\">C# Coding standards</a> for detailed guideline for C# coding standards.</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"85\"><strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"85\">TODO</strong> Template Coding standards</p>\n<p sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"87\"><strong sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"87\">TODO</strong> Template Preprocess JS Coding standards</p>\n",
  "type": "Conceptual",
  "source": {
    "remote": {
      "path": "samples/seed/articles/engineering_guidelines.md",
      "branch": "main",
      "repo": "https://github.com/dotnet/docfx"
    },
    "startLine": 0.0,
    "endLine": 0.0
  },
  "path": "articles/engineering_guidelines.md",
  "documentation": {
    "remote": {
      "path": "samples/seed/articles/engineering_guidelines.md",
      "branch": "main",
      "repo": "https://github.com/dotnet/docfx"
    },
    "startLine": 0.0,
    "endLine": 0.0
  },
  "_appName": "Seed",
  "_appTitle": "docfx seed website",
  "_enableSearch": true,
  "pdf": true,
  "pdfTocPage": true,
  "rawTitle": "<h1 id=\"engineering-guidelines\" sourcefile=\"articles/engineering_guidelines.md\" sourcestartlinenumber=\"2\">Engineering Guidelines</h1>",
  "title": "Engineering Guidelines",
  "wordCount": 521.0,
  "_key": "articles/engineering_guidelines.md",
  "_navKey": "~/toc.yml",
  "_navPath": "toc.html",
  "_navRel": "../toc.html",
  "_path": "articles/engineering_guidelines.html",
  "_rel": "../",
  "_tocKey": "~/articles/toc.yml",
  "_tocPath": "articles/toc.html",
  "_tocRel": "toc.html",
  "_disableToc": false,
  "docurl": "https://github.com/dotnet/docfx/blob/main/samples/seed/articles/engineering_guidelines.md/#L1"
}