name: release
on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x

    - run: npm install
      working-directory: templates

    - run: npm run build
      working-directory: templates

    - name: dotnet pack
      run: dotnet pack -c Release /p:Version=${GITHUB_REF_NAME#v} -o drop/nuget

    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: drop/nuget

    - name: dotnet publish
      run: |
        dotnet publish src/docfx -f net7.0 -c Release /p:Version=${GITHUB_REF_NAME#v} --self-contained -r win-x64 -o drop/publish/win-x64
        dotnet publish src/docfx -f net7.0 -c Release /p:Version=${GITHUB_REF_NAME#v} --self-contained -r linux-x64 -o drop/publish/linux-x64
        dotnet publish src/docfx -f net7.0 -c Release /p:Version=${GITHUB_REF_NAME#v} --self-contained -r osx-x64 -o drop/publish/osx-x64
        mkdir -p drop/bin

    - run: zip -r ../../bin/docfx-win-x64-${GITHUB_REF_NAME}.zip .
      working-directory: drop/publish/win-x64
    - run: zip -r ../../bin/docfx-linux-x64-${GITHUB_REF_NAME}.zip .
      working-directory: drop/publish/linux-x64
    - run: zip -r ../../bin/docfx-osx-x64-${GITHUB_REF_NAME}.zip .
      working-directory: drop/publish/osx-x64

    - uses: actions/upload-artifact@v3
      with:
        name: bin
        path: drop/bin

    - name: Upload GitHub release
      run: |
        gh release upload ${GITHUB_REF_NAME} drop/bin/docfx-win-x64-${GITHUB_REF_NAME}.zip
        gh release upload ${GITHUB_REF_NAME} drop/bin/docfx-linux-x64-${GITHUB_REF_NAME}.zip
        gh release upload ${GITHUB_REF_NAME} drop/bin/docfx-osx-x64-${GITHUB_REF_NAME}.zip
      env:
        GH_TOKEN: ${{ github.token }}

    # Run publish as the last step as `gh run download` does not download actions in running state
    - name: publish
      uses: Azure/pipelines@v1.2
      with:
        azure-devops-project-url: https://dev.azure.com/ceapex/Engineering
        azure-pipeline-name: 'dotnet.docfx'
        azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
        azure-pipeline-variables: '{"GH_RUNID": "${{github.run_id}}"}'
