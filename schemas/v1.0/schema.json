{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "id": "https://github.com/dotnet/docfx/schemas/v1.0/schema.json",
    "title": "DocFX document schema meta-schema",
    "definitions": {
        "schemaArray": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#/definitions/propertyObject" }
        },
        "propertyDefinition": {
            "type": "object",
            "additionalProperties": { "$ref": "#/definitions/propertyObject" },
            "default": {}
        },
        "propertyObject": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": { },
                "type": { "$ref": "#/definitions/simpleTypes" },
                "properties": { "$ref": "#/definitions/propertyDefinition" },
                "items": {
                    "anyOf": [
                        { "$ref": "#/definitions/propertyObject" },
                        { "$ref": "#/definitions/schemaArray" }
                    ],
                    "default": {}
                },
                "reference": {
                    "type": "string",
                    "description": "Defines whether current property is a reference to the actual value of the property",
                    "enum": [
                        "none",
                        "file"
                    ]
                },
                "contentType": {
                    "type": "string",
                    "description": "Defines the content type of the property",
                    "enum": [
                        "default",
                        "uid",
                        "xref",
                        "href",
                        "file",
                        "markdown"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mergeType": {
                    "type":"string",
                    "description": "Defines how to merge the property",
                    "enum": [
                        "key",
                        "merge",
                        "replace",
                        "ignore"
                    ]
                }
            },
            "patternProperties": {
                "^x_": { }
            }
        },
        "simpleTypes": {
            "enum": [
                "array",
                "boolean",
                "integer",
                "null",
                "number",
                "object",
                "string"
            ]
        }
    },
    "type": "object",
    "properties": {
        "$schema": {
            "type": "string",
            "format": "uri",
            "description": "The version of the schema specification, for example, `https://github.com/dotnet/docfx/v1.0/schema#"
        },
        "version": {
            "type": "string",
            "description": "The version of current schema object"
        },
        "id": {
            "type": "string",
            "description": "It is best practice to include an `id` property as an unique identifier for each schema."
        },
        "title": {
            "type": "string",
            "description": "The title of current schema, `LandingPage`, for example. In DocFX, this value can be used to determine what kind of documents apply to this schema, If not specified, file name of this schema is used."
        },
        "description": {
            "type": "string"
        },
        "type": {
            "type": "string",
            "enum": [
                "object"
            ],
            "description": "The type of the root document model MUST be `object`"
        },
        "default": {},
        "properties": { "$ref": "#/definitions/propertyDefinition" },
        "patternProperties": {
            "^x_": { }
        }
    },
    "default": {}
}
