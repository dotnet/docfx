trigger:
  batch: true
  branches:
    include:
    - v3

pr:
- v3

jobs:

- job: Test
  pool:
    name: DocFX
  steps:

  # Checkout
  - checkout: self
    clean: true
    fetchDepth: 1

  # Install .NET Core
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.300'

  # Checkout Docs.Build
  - powershell: |
      function exec([string] $cmd) {
          Write-Host $cmd -ForegroundColor Green
          & ([scriptblock]::Create($cmd))
          if ($lastexitcode -ne 0) {
              throw ("Error")
          }
      }

      $branch = & { git rev-parse --abbrev-ref HEAD }
      $docsBuildBranch = if ($branch -eq 'master') { 'v3-release' } else { 'v3' }
      $auth = "-c http.https://dev.azure.com.extraheader=""AUTHORIZATION: bearer $env:SYSTEM_ACCESS_TOKEN"""

      if (-Not (Test-Path -Path ../docfx)) {
          # Clone Docs.Build if not exists
          exec "git $auth clone https://dev.azure.com/ceapex/Engineering/_git/Docs.Build --depth 1 --branch $docsBuildBranch ../Docs.Build"
      } else {
        try {
            # Update Docs.Build to latest
            pushd ../Docs.Build
            exec "git fetch origin $docsBuildBranch"
            exec "git checkout --force origin/$docsBuildBranch"
            exec "git clean -xdff"
        } finally {
            popd
        }
      }

    displayName: Checkout Docs.Build
    env:
      BUILD_REASON: $(Build.Reason)
      SYSTEM_ACCESS_TOKEN: $(System.AccessToken)

  # Restore nuget packages
  - task: DotNetCoreCLI@2
    displayName: Restore nuget packages
    inputs:
      command: restore
      projects: '../Docs.Build/**/*.csproj'
      feedsToUse: config 
      nugetConfigPath: NuGet.config
      externalFeedCredentials: OpenPublishingService

  # Build
  - powershell: ../Docs.Build/build.ps1 -ci -noTest
    displayName: Build
    env:
      BUILD_REASON: $(Build.Reason)

  # Run regression tests
  - powershell: dotnet run -p ../Docs.Build/test/integration-test -c Release
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: Run regression tests
    env:
      BUILD_REASON: $(Build.Reason)
      DOCFX_APPDATA_PATH: D:/appdata
      DOCS_GITHUB_TOKEN: $(DOCS_GITHUB_TOKEN)
      SYSTEM_ACCESS_TOKEN: $(System.AccessToken)
      AzureServicesAuthConnectionString: $(AzureServicesAuthConnectionString)
