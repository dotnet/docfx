trigger:
- v3
- feature/*
pr:
- v3
- feature/*
jobs:
# unit & e2e test jobs
- job: LinuxTest_ubuntu_16_04
  pool:
    vmImage: 'ubuntu-16.04'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  steps:
    - bash: ./build.sh
- job: macOSTest_macOS_10_13
  pool:
    vmImage: 'macOS-10.13'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  steps:
    - bash: ./build.sh
- job: WindowsTest_vs2017_win2016
  pool:
    vmImage: 'vs2017-win2016'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  steps:
    - powershell: ./build.ps1
    # todo: conditional PR deploy, check myget limits
# deployment job(impact, build, pack, push package)
- job: Deploy
  pool:
    name: DocFX
  condition: ne(variables['Build.Reason'], 'PullRequest')
  steps:
  - powershell: ./impact.ps1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/v3')
    env:
      OP_BUILD_USER_TOKEN: $(OpBuildUserToken)
      GITHUB_BASIC_AUTH: $(GitHubBasicAuth)
      SYSTEM_ACCESS_TOKEN: $(System.AccessToken)
    displayName: Impact Test

  - powershell: ./build.ps1
    displayName: Build

  - task: NuGetCommand@2
    displayName: Push to Sandbox MyGet Feed
    inputs:
      command: push
      packagesToPush: drop/**/*.nupkg
      nuGetFeedType: external
      publishFeedCredentials: myget.docfx-v3-sandbox

  - task: NuGetCommand@2
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/v3'))
    displayName: Push to Production MyGet Feed
    inputs:
      command: push
      packagesToPush: drop/**/*.nupkg
      nuGetFeedType: external
      publishFeedCredentials: myget.docfx-v3
