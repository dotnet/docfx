trigger:
  batch: true
  branches:
    include:
    - non-exist
pr:
- non-exist

variables:
- group: devresourcekeyvault
- name: dotnetVersion
  value: 5.0.200
- name: runCodesignValidationInjection
  value: false
- name: NugetSecurityAnalysisWarningLevel
  value: none
- name: repos
  value:
    https://github.com/MicrosoftDocs/azure-docs-pr --profile --timeout 100 --regression-rules
    https://github.com/MicrosoftDocs/sql-docs-pr --profile --timeout 120 --regression-rules
    https://github.com/dotnet/docs --branch main --timeout 60 --regression-rules
    https://github.com/MicrosoftDocs/learn-pr --timeout 100 --no-dry-sync --regression-rules
    https://github.com/MicrosoftDocs/windowsserverdocs-pr  --timeout 45 --regression-rules
    https://github.com/MicrosoftDocs/VBA-Docs --timeout 60 --regression-rules
    https://github.com/MicrosoftDocs/azure-devops-docs-pr --timeout 30 --regression-rules
    https://github.com/dotnet/AspNetCore.Docs --branch main --profile --timeout 30 --output-html
    https://github.com/MicrosoftDocs/microsoft-365-docs-pr.zh-CN --branch live-sxs --profile --timeout 25
    https://github.com/MicrosoftDocs/powerbi-docs-pr.de-DE --branch live-sxs --timeout 25
    https://github.com/MicrosoftDocs/PowerShell-Docs --timeout 75 --branch staging
    https://github.com/dotnet/roslyn-api-docs --branch live --profile --timeout 105
    https://github.com/Azure/azure-docs-rest-apis --timeout 130 --error-level Warning
    https://github.com/MicrosoftDocs/dynamics365-docs-odata-apis --timeout 20
    https://github.com/MicrosoftDocs/mc-docs-pr --timeout 70
    https://github.com/MicrosoftDocs/dynamics365smb-devitpro --timeout 15
    https://github.com/MicrosoftDocs/DevSandbox --timeout 30
    https://github.com/MicrosoftDocs/test --timeout 20 --no-dry-sync
    https://github.com/MicrosoftDocs/DocsRoot --timeout 20
    https://dev.azure.com/cpubwin/windows-compatibility/_git/windows-compatibility --branch main --timeout 20
    https://github.com/MicrosoftDocs/azure-docs-cli --timeout 50
    https://github.com/MicrosoftDocs/dataprep-dotnet-pr --timeout 30
    https://github.com/MicrosoftDocs/azure-mediaplayer-typescript --timeout 30
    https://github.com/MicrosoftDocs/quantum-docs-private --timeout 30 --branch main
    https://github.com/microsoftgraph/microsoft-graph-docs --branch main --timeout 30
    https://github.com/MicrosoftDocs/bot-docs-pr --timeout 40 --no-dry-sync --dry-run --public-template
    https://github.com/MicrosoftDocs/azure-docs-pr --profile --timeout 50 --dry-run --regression-rules

jobs:
- job: WindowsBuild
  pool:
    name: Docfx-1ES
  steps:

  # Install .NET Core sdk
  - task: UseDotNet@2
    displayName: 'Install .NET Core sdk $(dotnetVersion)'
    inputs:
      packageType: sdk
      version: $(dotnetVersion)

  # Build RegressionTest into Artifact 
  - powershell: |
      dotnet build ./test/docfx.RegressionTest -warnAsError -c Release -r win7-x64 -o ./drop/RegressionTest
    displayName: Build RegressionTest into Artifact 

  # Publish RegressionTest binary
  - publish: ./drop/RegressionTest
    displayName: Publish RegressionTest binary
    artifact: RegressionTest

  # Run Component Detection
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- job: 1ES Pool Warm Up
  timeoutInMinutes: 180
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/v3-release'))
  dependsOn: WindowsBuild
  pool:
    name: Docfx-1ES
  strategy:
    matrix:
      1:
        params: $(repos)
      2:
        params: $(repos)
      3:
        params: $(repos)
      4:
        params: $(repos)
      5:
        params: $(repos)
      6:
        params: $(repos)

  steps:
  # Install .NET Core sdk
  - task: UseDotNet@2
    displayName: 'Install .NET Core sdk $(dotnetVersion)'
    inputs:
      packageType: sdk
      version: $(dotnetVersion)

  # Download RegressionTest binary
  - download: current
    displayName: Download warm up binary
    artifact: RegressionTest

  # Warm up
  - task: AzureCLI@2
    displayName: Prepare Repos on Every Agent
    inputs:
      azureSubscription: 'DevRel - Build Agents - 68db5a04-b547-4cfb-a966-6668a3bb3f7c'
      scriptType: ps
      scriptLocation: inlineScript
      powerShellErrorActionPreference: continue
      inlineScript: |
        New-Item -Path 'D:\docfx.TestData\.temp\' -ItemType Directory
        $(Pipeline.Workspace)/RegressionTest/docfx.RegressionTest.exe warm-up $(params)
    env:
      BUILD_REASON: $(Build.Reason)
      DOCFX_APPDATA_PATH: D:/appdata
      DOCS_GITHUB_TOKEN: $(gitHubTestToken)
      DOCS_KV_PROD_ENDPOINT: https://docfxcikvpub.vault.azure.net/
      AZURE_DEVOPS_TOKEN: $(vsoTestToken)
      PULL_REQUEST_NUMBER : $(System.PullRequest.PullRequestNumber)
      APPINSIGHTS_INSTRUMENTATIONKEY: 5226e0d0-086f-4cab-a491-1d00fde9eb09
