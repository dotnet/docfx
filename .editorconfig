# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
charset = utf-8
indent_style = space
trim_trailing_whitespace = true
insert_final_newline = true
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# YAML files
[*.{csproj,yml}]
indent_size = 2

# Markdown files
[*.{md,yml}]
trim_trailing_whitespace = false

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

# Dotnet diagnostic settings
[*.cs]

# "do not compare an object's exact type to the abstract class" is a valid assert, but very noisy right now
dotnet_diagnostic.xunit2018.severity = none

# Avoid magic numbers
dotnet_diagnostic.men010.severity = none

# Use a single return
dotnet_diagnostic.men007.severity = none

# Suppress Microsoft.VisualStudio.Threading warnings due to transitive dependency by OmniSharp.Extensions.LanguageServer
dotnet_diagnostic.vsthrd002.severity = none
dotnet_diagnostic.vsthrd011.severity = none
dotnet_diagnostic.vsthrd100.severity = none
dotnet_diagnostic.vsthrd200.severity = none

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.ca1001.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.ca1031.severity = none

# CA1064: Implement standard exception constructors
dotnet_diagnostic.ca1032.severity = none

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.ca1051.severity = none

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.ca1054.severity = none

# CA1055: URI-like return values should not be strings
dotnet_diagnostic.ca1055.severity = none

# CA1056: URI properties should not be strings
dotnet_diagnostic.ca1056.severity = none

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.ca1060.severity = none

# CA1062: CA1062: Validate arguments of public methods
dotnet_diagnostic.ca1062.severity = none

# CA1064: Make exception public
dotnet_diagnostic.ca1064.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.ca1305.severity = none

# CA1308: Specify StringComparison
dotnet_diagnostic.ca1307.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.ca1308.severity = none

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.ca1303.severity = none

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.ca1310.severity = none

# CA1508: Avoid dead conditional code
dotnet_diagnostic.ca1508.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.ca1724.severity = none

# CA1806DoNotIgnoreMethodResults
dotnet_diagnostic.ca1806.severity = none

# CA1801: Review unused parameters
dotnet_diagnostic.ca1801.severity = none

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.ca1812.severity = none

# CA1815: should override Equals
dotnet_diagnostic.ca1815.severity = none

# CA1819: C# Properties should not return arrays
dotnet_diagnostic.ca1819.severity = none

# CA2007DoNotDirectlyAwaitATaskAnalyzer
dotnet_diagnostic.ca2007.severity = none

# CA2101SpecifyMarshalingForPInvokeStringArguments
dotnet_diagnostic.ca2101.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.ca2227.severity = none

# CA5350:Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.ca5350.severity = none

# CA5351:Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.ca5351.severity = none

# CA5394: Do not use insecure randomness
dotnet_diagnostic.ca5394.severity = none

# CA5395: Do not use insecure randomness
dotnet_diagnostic.ca5395.severity = none

# SA0001XmlCommentAnalysisDisabled
dotnet_diagnostic.sa0001.severity = none

# SA1101PrefixLocalCallsWithThis
dotnet_diagnostic.sa1101.severity = none

# SA1122UseStringEmptyForEmptyStrings
dotnet_diagnostic.sa1122.severity = none

# SA1127GenericTypeConstraintsMustBeOnOwnLine
dotnet_diagnostic.sa1127.severity = none

# SA1201ElementsMustAppearInTheCorrectOrder: A constructor should not follow a property
dotnet_diagnostic.sa1201.severity = none

# SA1204StaticElementsMustAppearBeforeInstanceElements: A static element is positioned beneath an instance element of the same type.
dotnet_diagnostic.sa1204.severity = none

# SA1308VariableNamesMustNotBePrefixed
dotnet_diagnostic.sa1308.severity = none

# SA1309FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.sa1309.severity = none

# SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter
dotnet_diagnostic.sa1311.severity = none

# SA1316TupleElementNamesShouldUseCorrectCasing
dotnet_diagnostic.sa1316.severity = none

# SA1405DebugAssertMustProvideMessageText
dotnet_diagnostic.sa1405.severity = none

# SA1414TupleTypesInSignaturesShouldHaveElementNames
dotnet_diagnostic.sa1414.severity = none

# SA1502ElementMustNotBeOnSingleLine
dotnet_diagnostic.sa1502.severity = none

# SA1513ClosingBraceMustBeFollowedByBlankLine
dotnet_diagnostic.sa1513.severity = none

# SA1600ElementsMustBeDocumented
dotnet_diagnostic.sa1600.severity = none

# SA1602EnumerationItemsMustBeDocumented
dotnet_diagnostic.sa1602.severity = none

# SA1611ElementParametersMustBeDocumented
dotnet_diagnostic.sa1611.severity = none

# SA1615ElementReturnValueMustBeDocumented
dotnet_diagnostic.sa1615.severity = none

# SA1618GenericTypeParametersMustBeDocumented
dotnet_diagnostic.sa1618.severity = none

# SA1615PropertySummaryDocumentationMustMatchAccessors
dotnet_diagnostic.sa1623.severity = none

# SA1629DocumentationTextMustEndWithAPeriod
dotnet_diagnostic.sa1629.severity = none

# SA1642ConstructorSummaryDocumentationMustBeginWithStandardText
dotnet_diagnostic.sa1642.severity = none

# SA1652EnableXMLDocumentOutput
dotnet_diagnostic.sa1652.severity = none

# Test specific diagnostic settings
[test/**.cs]

# CA1707 - Remove the underscores from member name
dotnet_diagnostic.ca1707.severity = none

# SA1117ParametersMustBeOnSameLineOrSeparateLines
dotnet_diagnostic.sa1117.severity = none

# SA1118ParameterMustNotSpanMultipleLines
dotnet_diagnostic.sa1118.severity = none

# Dotnet code style settings:
[*.cs]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# CSharp code style settings:
[*.cs]
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true
